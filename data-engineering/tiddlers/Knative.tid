created: 20241216100009351
creator: jargonzhou
modified: 20241216101140669
modifier: jargonzhou
tags: Serverless
title: Knative

<<<.tc-big-quote
What is Knative?

Knative is a platform-agnostic solution for running serverless deployments.
<<<

! Terminology


! Knative Serving

Knative Serving defines a set of objects as Kubernetes Custom Resource Definitions (CRDs). These resources are used to define and control how your serverless workload behaves on the cluster.

The primary Knative Serving resources are ''Services'', ''Routes'', ''Configurations'', and ''Revisions''.

* ''Services'': The `service.serving.knative.dev` resource automatically manages the whole lifecycle of your workload. It controls the creation of other objects to ensure that your app has a route, a configuration, and a new revision for each update of the service. Service can be defined to always route traffic to the latest revision or to a pinned revision.
* ''Routes'': The `route.serving.knative.dev` resource maps a network endpoint to one or more revisions. You can manage the traffic in several ways, including fractional traffic and named routes.
* ''Configurations'': The `configuration.serving.knative.dev` resource maintains the desired state for your deployment. It provides a clean separation between code and configuration and follows //the Twelve-Factor App methodology//. Modifying a configuration creates a new revision.
* ''Revisions'': The `revision.serving.knative.dev` resource is a point-in-time snapshot of the code and configuration for each modification made to the workload. Revisions are immutable objects and can be retained for as long as useful. Knative Serving Revisions can be automatically scaled up and down according to incoming traffic.

[img[https://github.com/knative/serving/raw/main/docs/spec/images/object_model.png]]

! Knative Eventing

The Event-driven application platform for Kubernetes

Knative Eventing is a collection of APIs that enable you to use an event-driven architecture with your applications. You can use these APIs to create components that route events from event producers (known as sources) to event consumers (known as sinks) that receive events. Sinks can also be configured to respond to HTTP requests by sending a response event.


! References

* [[Home|https://knative.dev/]]
* Chester, Jacques. ''Knative in Action''. 2021. Manning