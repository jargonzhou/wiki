@Book{Kessin2012,
  author           = {Zachary Kessin},
  publisher        = {O’Reilly Media},
  title            = {Building Web Applications with Erlang},
  year             = {2012},
  isbn             = {978-1-449-30996-1},
  file             = {:Erlang/Building Web Applications with Erlang, 2012.pdf:PDF},
  groups           = {Erlang},
  modificationdate = {2024-08-25T10:32:19},
}

@Book{Armstrong1996,
  author           = {Joe Armstrong and Robert Virding and Claes Wikstrom and Mike Williams},
  publisher        = {Prentice Hall},
  title            = {Concurrent Programming in ERLANG part1},
  year             = {1996},
  edition          = {2},
  isbn             = {0-13-508301-X},
  file             = {:Erlang/Concurrent Programming in ERLANG part1.pdf:PDF},
  groups           = {Erlang},
  modificationdate = {2024-08-25T10:32:27},
}

@Book{Cesarini2016,
  author           = {Francesco Cesarini and Stephen Vinoski},
  publisher        = {O’Reilly Media},
  title            = {Designing for Scalability with Erlang OTP},
  year             = {2016},
  isbn             = {978-1-449-32073-7},
  file             = {:Erlang/Designing for Scalability with Erlang OTP, 2015, Early Release.pdf:PDF},
  groups           = {Erlang},
  modificationdate = {2024-08-25T10:32:34},
}

@Book{Logan2011,
  author           = {Martin Logan and Eric Merritt and Richard Carlsson},
  publisher        = {Manning Publications},
  title            = {Erlang and OTP in Action},
  year             = {2011},
  isbn             = {9781933988788},
  file             = {:Erlang/Erlang and OTP in Action, 2011.pdf:PDF},
  groups           = {Erlang},
  modificationdate = {2024-08-25T10:32:50},
}

@Book{Cesarini2009,
  author           = {Francesco Cesarini and Simon Thompson},
  publisher        = {O’Reilly Media},
  title            = {Erlang Programming},
  year             = {2009},
  isbn             = {978-0-596-51818-9},
  file             = {:Erlang/Erlang Programming, 2009.pdf:PDF;:Erlang/Erlang编程指南(Erlang Programming).pdf:PDF},
  groups           = {Erlang},
  modificationdate = {2024-08-25T10:33:05},
}

@Book{Armstrong2013a,
  author           = {Joe Armstrong},
  publisher        = {Pragmatic Programmers},
  title            = {Programming Erlang},
  year             = {2013},
  isbn             = {978-1-937785-53-6},
  comment          = {Link: https://pragprog.com/book/jaerlang/programming-erlang},
  file             = {:Programming Erlang 2nd edition[Pragmatic Programmers, 2013].pdf:PDF},
  groups           = {Erlang},
  modificationdate = {2024-08-25T10:34:13},
}

@Book{Barski2011,
  author           = {Conrad Barski, M.D},
  publisher        = {No Starch Press},
  title            = {Land of Lisp : learn to program in Lisp, one game at a time!},
  year             = {2011},
  isbn             = {978-1-59327-281-4},
  file             = {:Lisp/Land of Lisp.pdf:PDF},
  groups           = {Common Lisp},
  modificationdate = {2024-08-25T08:39:15},
  url              = {http://landoflisp.com/},
}

@Book{Steele1990,
  author           = {Guy L. Steele},
  publisher        = {Digital Press},
  title            = {Common Lisp: The Language},
  year             = {1990},
  edition          = {2},
  comment          = {1097 pages},
  file             = {:Lisp/Common Lisp The Language.pdf:PDF;:Lisp/cltl/cltl2.html:URL;:Lisp/cltl_ht.tgz:tgz},
  groups           = {Common Lisp},
  modificationdate = {2024-08-25T08:38:32},
  ranking          = {rank5},
  url              = {https://www.cs.cmu.edu/Groups/AI/html/cltl/cltl2.html},
}

@Book{Weitz2016,
  author           = {Edmund Weitz},
  editor           = {Steve Anglin},
  publisher        = {Apress},
  title            = {Common Lisp Recipes: A Problem-Solution Approach},
  year             = {2016},
  abstract         = {If you look at the table of contents, you’ll notice that the book covers a lot of different
areas, from core features of the language, to third party additions, to tasks like debugging. 

And it is, to my knowledge, the first COMMON LISP book which discusses
topics such as environment access, logical pathnames, foreign function interfaces,
multithreading, graphical user interfaces, persistence, delivery of executables, and
optimization.},
  comment          = {755 pages},
  file             = {:Lisp/Common Lisp Recipes.pdf:PDF},
  groups           = {Common Lisp},
  modificationdate = {2024-11-24T09:01:36},
  ranking          = {rank5},
  url              = {https://link.springer.com/book/10.1007/978-1-4842-1176-2},
}

@Book{Paul1996,
  author           = {Graham, Paul},
  editor           = {Mona Pompili},
  publisher        = {Prentice Hall},
  title            = {ANSI Common Lisp},
  year             = {1996},
  comment          = {432 pages

Home: https://paulgraham.com/acl.html
中文版: https://acl.readthedocs.io/en/latest/},
  file             = {:Lisp/ANSI Common Lisp.pdf:PDF},
  groups           = {Common Lisp},
  modificationdate = {2024-09-03T06:54:10},
  ranking          = {rank5},
  url              = {https://www.paulgraham.com/acl.html},
}

@Manual{Java2013b,
  title            = {The Java® Virtual Machine Specification},
  year             = {2013},
  file             = {:JVM/jvms7.pdf:PDF;:JVM/jvms8.pdf:PDF;:JVM/jvms11.pdf:PDF;:JVM/jvms12.pdf:PDF;:JVM/jvms13.pdf:PDF},
  groups           = {JVM},
  modificationdate = {2024-08-25T09:03:51},
  url              = {https://docs.oracle.com/javase/specs/},
}

@Manual{Java2013a,
  title            = {The Java® Language Specification},
  year             = {2013},
  file             = {:Java/jls13.pdf:PDF;:Java/jls7.pdf:PDF;:Java/jls8.pdf:PDF;:Java/jls11.pdf:PDF;:Java/jls12.pdf:PDF},
  groups           = {Java},
  modificationdate = {2024-08-25T08:58:41},
  url              = {https://docs.oracle.com/javase/specs/},
}

@Book{Tsvetinov2015,
  author           = {Nickolay Tsvetinov},
  publisher        = {Packt Publishing},
  title            = {Learning Reactive Programming With Java 8},
  year             = {2015},
  isbn             = {978-1-78528-872-2},
  comment          = {RxJava version: 1.0.8},
  file             = {:Java/Learning Reactive Programming With Java 8, 2015.pdf:PDF},
  groups           = {Java},
  keywords         = {Reactive Programming, RxJava},
  modificationdate = {2024-08-25T08:58:08},
}

@Book{Oaks1999,
  author           = {Scott Oaks and Henry Wong},
  publisher        = {O'Reilly},
  title            = {Java Threads},
  year             = {1999},
  edition          = {1-56592-418-5},
  file             = {:Java/Java线程V3 SE5.0. 2004.pdf:PDF},
  groups           = {Java},
  modificationdate = {2024-08-25T08:57:43},
}

@Book{Goetz2006,
  author           = {Brian Goetz and Tim Peierls and Joshua Bloch and Joseph Bowbeer and David Holmes and Doug Lea},
  publisher        = {Addison-Wesley},
  title            = {Java Concurrency in Practice},
  year             = {2006},
  isbn             = {0-321-34960-1},
  file             = {:Java/Java Concurrency in Practice, 2006.pdf:PDF;:Java/Java并发编程实战.pdf:PDF},
  groups           = {Java},
  modificationdate = {2024-08-25T08:56:52},
  url              = {https://jcip.net},
}

@Misc{Javatheo37:online,
  author       = {Brian Goetz},
  howpublished = {\url{https://www.ibm.com/developerworks/java/library/j-jtp05236/index.html?ca=drs-}},
  note         = {(Accessed on 01/13/2019)},
  title        = {Java theory and practice: Dealing with InterruptedException},
  groups       = {Java},
}

@Book{Friesen7814a,
  author           = {Jeff Friesen},
  title            = {Java IO, NIO and NIO.2},
  year             = {2015},
  file             = {:Java/Java IO, NIO and NIO.2.pdf:PDF},
  groups           = {Java},
  modificationdate = {2024-08-25T08:57:19},
}

@Book{Nutshell3708a,
  author           = {Benjamin J. Evans and David Flanagan},
  title            = {Java in a Nutshell},
  year             = {2014},
  file             = {:Java/Java in a Nutshell, 6th edition.pdf:PDF},
  groups           = {Java},
  modificationdate = {2024-08-25T08:57:11},
}

@Book{Gray:1992:TPC:573304,
  author           = {Gray, Jim and Reuter, Andreas},
  publisher        = {Morgan Kaufmann Publishers Inc.},
  title            = {Transaction Processing: Concepts and Techniques},
  year             = {1992},
  address          = {San Francisco, CA, USA},
  edition          = {1st},
  isbn             = {1558601902},
  groups           = {Data Storage},
  modificationdate = {2022-10-11T00:38:41},
}

@Book{Hinojosa2013,
  author           = {Daniel Hinojosa},
  publisher        = {O’Reilly Media},
  title            = {Testing in Scala},
  year             = {2013},
  isbn             = {978-1-449-31511-5},
  file             = {:Scala/Testing in Scala, 2013.pdf:PDF},
  groups           = {Scala},
  modificationdate = {2024-08-25T09:33:35},
  url              = {https://www.oreilly.com/library/view/testing-in-scala/9781449360313},
}

@Misc{ScalaSTM,
  howpublished     = {\url{https://nbronson.github.io/scala-stm/intro.html}},
  note             = {(Accessed on 11/28/2018)},
  title            = {ScalaSTM},
  comment          = {There have been several ambitious attempts to create STMs that can run existing sequential imperative code in parallel. This is a difficult task that requires a lot of magic, because calls to the STM need to be inserted for every load and store of a non-final field or array element inside an atomic block. Good performance is also difficult because of the large numbers of reads and writes.

The ScalaSTM API avoids the need for magic by only managing Ref-s. This means that there are fewer memory locations to manage, and no bytecode instrumentation or compiler modifications are required. As in Haskell and Clojure, the usefulness of Ref is multiplied by the language’s good support for immutable data structures. ScalaSTM also includes concurrent sets and maps that can be used in transactions.},
  groups           = {Scala},
  modificationdate = {2023-05-02T10:19:40},
}

@Book{Suereth2012,
  author           = {Joshua D. Suereth},
  publisher        = {Manning Publications},
  title            = {Scala in Depth},
  year             = {2012},
  isbn             = {9781935182702},
  file             = {:Scala/Scala in Depth, 2012.pdf:PDF},
  groups           = {Scala},
  modificationdate = {2024-08-25T09:33:26},
  url              = {https://www.manning.com/books/scala-in-depth},
}

@Book{Raychaudhuri2013,
  author           = {Nilanjan Raychaudhuri},
  publisher        = {Manning Publications},
  title            = {Scala in Action},
  year             = {2013},
  isbn             = {9781935182757},
  file             = {:Scala/Scala in Action, 2013.pdf:PDF},
  groups           = {Scala},
  modificationdate = {2024-08-25T09:33:20},
  url              = {https://www.manning.com/books/scala-in-action},
}

@Book{Theron2016,
  author           = {Vincent Theron and Michael Diamant},
  publisher        = {Packt Publishing},
  title            = {Scala High Performance Programming},
  year             = {2016},
  isbn             = {978-1-78646-604-4},
  file             = {:Scala/Scala High Performance Programming.pdf:PDF},
  groups           = {Scala},
  modificationdate = {2024-08-25T09:33:13},
}

@Book{Khot2015,
  author           = {Atul S. Khot},
  publisher        = {Packt Publishing},
  title            = {Scala Functional Programming Patterns},
  year             = {2015},
  isbn             = {978-1-78398-584-5},
  file             = {:Scala/Scala Functional Programming Patterns.pdf:PDF},
  groups           = {Scala},
  modificationdate = {2024-08-25T09:33:05},
  url              = {https://www.packtpub.com/product/scala-functional-programming-patterns/9781783985845},
}

@Book{Bugnion2016,
  author           = {Pascal Bugnion},
  publisher        = {Packt Publishing},
  title            = {Scala for Data Science-},
  year             = {2016},
  isbn             = {9781785281372},
  file             = {:Scala for Data Science[2016, Packet].pdf:PDF},
  groups           = {Scala},
  modificationdate = {2024-08-25T09:32:51},
  url              = {https://www.oreilly.com/library/view/scala-for-data/9781785281372/},
}

@Book{Manivannan2015,
  author           = {Arun Manivannan},
  publisher        = {Packt Publishing},
  title            = {Scala Data Analysis Cookbook},
  year             = {2015},
  isbn             = {9781784396749},
  file             = {:Scala/Scala Data Analysis Cookbook.pdf:PDF},
  groups           = {Scala},
  modificationdate = {2024-08-25T09:30:55},
  url              = {https://www.oreilly.com/library/view/scala-data-analysis/9781784396749},
}

@Book{Alexander2021,
  author           = {Alvin Alexander},
  publisher        = {O’Reilly Media},
  title            = {Scala Cookbook},
  year             = {2021},
  edition          = {2},
  isbn             = {978-1-492-05154-1},
  file             = {:Scala/Scala Cookbook, 2nd Edition, 2021.pdf:PDF},
  groups           = {Scala},
  modificationdate = {2024-08-25T09:30:48},
  url              = {https://www.oreilly.com/library/view/scala-cookbook-2nd/9781492051534},
}

@Book{Wampler2021,
  author           = {Dean Wampler and Alex Payne},
  publisher        = {O’Reilly Media},
  title            = {Programming Scala},
  year             = {2021},
  edition          = {3},
  isbn             = {978-1-492-07789-3},
  file             = {:Scala/Programming Scala, 3rd Edition, 2021.pdf:PDF},
  groups           = {Scala},
  modificationdate = {2024-08-25T09:29:18},
}

@Book{Odersky2021,
  author           = {Martin Odersky and Lex Spoon and Bill Venners and Frank Sommers},
  publisher        = {Artima Press},
  title            = {Programming in Scala},
  year             = {2021},
  edition          = {5},
  file             = {:Scala/Programming in Scala, 5th Edition, 2021.pdf:PDF},
  groups           = {Scala},
  modificationdate = {2024-08-25T09:29:03},
}

@Misc{Multiverse,
  howpublished     = {\url{https://github.com/pveentjer/Multiverse}},
  note             = {(Accessed on 11/28/2018)},
  title            = {Multiverse: STM Implementation for the JVM},
  groups           = {Scala},
  modificationdate = {2023-05-02T10:19:40},
}

@Book{Saxena2015,
  author           = {Shiti Saxena},
  publisher        = {Packt Publishing},
  title            = {Mastering Play Framework for Scala},
  year             = {2015},
  isbn             = {9781783983803},
  file             = {:Scala/Mastering Play Framework for Scala, 2015.pdf:PDF},
  groups           = {Scala},
  modificationdate = {2024-08-25T09:28:20},
  url              = {https://www.oreilly.com/library/view/mastering-play-framework/9781783983803/},
}

@Book{Prokopec2014,
  author           = {Aleksandar Prokopec},
  publisher        = {Packt Publishing},
  title            = {Learning Concurrent Programming in Scala},
  year             = {2014},
  isbn             = {978-1-78328-141-1},
  file             = {:Scala/Learning Concurrent Programming in Scala.pdf:PDF},
  groups           = {Scala},
  modificationdate = {2024-08-25T09:28:12},
  url              = {https://www.oreilly.com/library/view/learning-concurrent-programming/9781783281411/},
}

@Book{BevilacquaLinn2013,
  author           = {Michael Bevilacqua-Linn},
  publisher        = {Pragmatic Programmers},
  title            = {Functional Programming Patterns in Scala and Clojure},
  year             = {2013},
  isbn             = {9781937785475},
  file             = {:Scala/Functional Programming Patterns in Scala and Clojure - Write Lean Programs for the JVM.pdf:PDF},
  groups           = {Scala},
  modificationdate = {2024-08-25T09:27:51},
  url              = {https://www.oreilly.com/library/view/functional-programming-patterns/9781941222416/},
}

@Book{Chiusano2014,
  author           = {Paul Chiusano and Runar Bjarnason},
  publisher        = {Manning Publications},
  title            = {Functional Programming in Scala},
  year             = {2014},
  isbn             = {9781617290657},
  file             = {:Scala/Functional Programming in Scala, 2015.pdf:PDF},
  groups           = {Scala},
  modificationdate = {2024-08-25T09:27:42},
  url              = {https://www.manning.com/books/functional-programming-in-scala},
}

@Book{Sullivan2008,
  author           = {Bryan O’Sullivan, John Goerzen, Don Stewart},
  publisher        = {O’Reilly Media},
  title            = {Real World Haskell},
  year             = {2008},
  isbn             = {978-0-596-51498-3},
  comment          = {712 pages

Yet Another Haskell Tutorial
https://users.umiacs.umd.edu/~hal/docs/daume02yaht.pdf

GHCi, version 6.8.3

todo: CHAPTER 4 Functional Programming},
  file             = {:Haskell/Real World Haskell.pdf:PDF;:Haskell/Yet Another Haskell Tutorial.pdf:PDF},
  groups           = {Haskell},
  modificationdate = {2024-08-25T09:38:50},
  ranking          = {rank5},
  url              = {https://book.realworldhaskell.org/},
}

@Misc{haskell-cheatsheet,
  author           = {Justin Bailey},
  title            = {Haskell Cheat Sheet},
  year             = {2010},
  file             = {:Haskell/Haskell Cheat Sheet.pdf:PDF},
  groups           = {Haskell},
  modificationdate = {2024-08-25T09:37:37},
  url              = {https://cheatsheet.codeslower.com/},
}

@Book{Thompson1999,
  author           = {Simon Thompson},
  title            = {Type Theory and Functional Programming},
  year             = {1999},
  file             = {:OCaml/Type Theory and Functional Programming.pdf:PDF},
  groups           = {OCaml},
  modificationdate = {2024-08-25T09:45:07},
}

@Book{Parr2012,
  author           = {Terence Parr},
  publisher        = {The Pragmatic Programmers, LLC.},
  title            = {The Definitive ANTLR 4 Reference},
  year             = {2012},
  comment          = {322 pages

ANTLR’s core grammarnotation: P.67},
  file             = {:Compiler/The Definitive ANTLR 4 Reference, 2nd Edition.pdf:PDF},
  groups           = {Compiler},
  modificationdate = {2024-08-25T10:18:51},
  url              = {https://pragprog.com/titles/tpantlr2/the-definitive-antlr-4-reference/},
}

@TechReport{Hudak1989,
  author           = {Paul Hudak and Yale University},
  title            = {The Conception, Evolution, and Application of Functional Programming Languages},
  year             = {1989},
  number           = {several},
  file             = {:Theory/The Conception, Evolution, and Application of Functional Programming Languages.pdf:PDF},
  groups           = {LanguageTheory},
  modificationdate = {2024-08-25T10:39:45},
}

@Book{Hindley2008,
  author           = {J. Roger Hindley, Jonathan P. Seldin},
  publisher        = {Cambridge University Press},
  title            = {Lambda-Calculus and Combinators: an Introduction},
  year             = {2008},
  edition          = {2},
  isbn             = {9780521898850},
  month            = aug,
  file             = {:Theory/Lambda-Calculus and Combinators, an Introduction, 2008.pdf:PDF},
  groups           = {LanguageTheory},
  modificationdate = {2024-08-25T10:39:30},
}

@Book{g,
  title            = {Functional Programming for Java Developers},
  file             = {:Java/Functional Programming for Java Developers.pdf:PDF},
  groups           = {Java},
  modificationdate = {2024-08-25T10:44:39},
}

@InProceedings{@ScottWlaschin,
  author           = {@ScottWlaschin},
  title            = {Functional Design Patterns},
  file             = {:Theory/Functional Design Patterns[F sharp].pdf:PDF},
  groups           = {LanguageTheory},
  modificationdate = {2024-08-25T10:39:22},
}

@Book{Cooper2012,
  author           = {Keith D. Cooper and Linda Torczon},
  publisher        = {Elsevier},
  title            = {Engineering a Compiler},
  year             = {2012},
  edition          = {2},
  isbn             = {978-0-12-088478-0},
  comment          = {- 2nd edition: https://www.elsevier.com/books/engineering-a-compiler/cooper/978-0-12-088478-0
- 3rd edition: https://www.elsevier.com/books/engineering-a-compiler/cooper/978-0-12-815412-0},
  file             = {:Compiler/Engineering a Compiler, 2nd edition.pdf:PDF},
  groups           = {Compiler},
  modificationdate = {2024-08-25T10:18:09},
  ranking          = {rank5},
}

@InProceedings{Spivak2013,
  author           = {David I. Spivak},
  title            = {Category Theory for Scientists},
  year             = {2013},
  file             = {:Theory/Category Theory for Scientists, 2013.pdf:PDF},
  groups           = {LanguageTheory},
  modificationdate = {2024-08-25T10:39:07},
}

@Book{Barr1990,
  author           = {Michael Barr, Charles Wells},
  publisher        = {Prentice Hall New York},
  title            = {Category Theory for Computing Science},
  year             = {1990},
  volume           = {49},
  file             = {:Theory/Category Theory for Computing Science, 1998.pdf:PDF},
  groups           = {LanguageTheory},
  modificationdate = {2024-08-25T10:38:59},
}

@Book{Awodey2010,
  author           = {Steve Awodey},
  editor           = {D.M. Gabbay, John Shepherdson},
  publisher        = {Oxford University Press},
  title            = {Category Theory},
  year             = {2010},
  edition          = {2},
  isbn             = {9780199587360},
  file             = {:Theory/Category Theory, 2nd Edition, 2010.pdf:PDF},
  groups           = {LanguageTheory},
  modificationdate = {2024-08-25T10:38:38},
}

@InProceedings{Michaelson,
  author           = {Greg Michaelson},
  title            = {An Introduction to Functional Programming through Lambda Calculus},
  file             = {:Theory/An Introduction to Functional Programming through Lambda Calculus.pdf:PDF},
  groups           = {LanguageTheory},
  modificationdate = {2024-08-25T10:38:26},
}

@InProceedings{Vana,
  author   = {Peter Van Roy},
  title    = {Programming Paradigms for Dummies: What Every Programmer Should Know},
  abstract = {on and how it lets us organize large programs. Finally, we conclude by focus-
ing on concurrency, which is widely considered the hardest concept to program with.
We present four little-known but important paradigms that greatly simplify concurrent
programming with respect to mainstream languages: declarative concurrency (both ea-
ger and lazy), functional reactive programming, discrete synchronous programming, and
constraint programming. These paradigms have no race conditions and can be used in
cases where no other paradigm works. We explain why for multi-core processors and we
give several examples from computer music, which often uses these paradigms.},
  file     = {:Programming Paradigms for Dummies - What Every Programmer Should Know.pdf:PDF},
}

@InProceedings{Claessen2009a,
  author           = {Koen Claessen and Michał Pałka and John Hughes and Hans Svensson and Ulf Wiger and Nicholas Smallbone and Thomas Arts and Erlang Training and Consulting},
  title            = {Finding Race Conditions in Erlang with QuickCheck and PULSE},
  year             = {2009},
  abstract         = {We address the problem of testing and debugging concurrent, distributed Erlang applications. In concurrent programs, race conditions are a common class of bugs and are very hard to find in practice. Traditional unit testing is normally unable to help finding all
race conditions, because their occurrence depends so much on timing. Therefore, race conditions are often found during system testing, where due to the vast amount of code under test, it is often hard
to diagnose the error resulting from race conditions. We present
three tools (QuickCheck, PULSE, and a visualizer) that in combination can be used to test and debug concurrent programs in unit
testing with a much better possibility of detecting race conditions.
We evaluate our method on an industrial concurrent case study and
illustrate how we find and analyze the race conditions.},
  file             = {:Erlang/finding-race-conditions.pdf:PDF},
  groups           = {Erlang},
  keywords         = {QuickCheck, Race Conditions},
  modificationdate = {2024-08-25T10:34:04},
}

@Manual{System2018a,
  title            = {Erlang/OTP系统文档},
  year             = {2018},
  file             = {:Erlang/Erlang OTP System Documentation.pdf:PDF},
  groups           = {Erlang},
  modificationdate = {2024-08-25T10:32:42},
}

@Misc{ErlangOT79:online,
  title        = {Erlang应用目录},
  howpublished = {\url{http://erlang.org/doc/applications.html}},
  note         = {(Accessed on 01/30/2019)},
  groups       = {Erlang},
}

@Manual{Compiler2018a,
  title            = {Erlang应用手册: Compiler},
  year             = {2018},
  file             = {:Erlang/compiler.pdf:PDF},
  groups           = {Erlang},
  modificationdate = {2024-08-25T10:33:23},
}

@Manual{erlang-erts,
  title            = {Erlang应用手册: Erlang Run-Time System Application (ERTS)},
  year             = {2018},
  file             = {:Erlang/erts.pdf:PDF},
  groups           = {Erlang},
  modificationdate = {2024-08-25T10:33:32},
}

@Manual{Kernel2018a,
  title            = {Erlang应用手册: Kernel},
  year             = {2018},
  file             = {:Erlang/kernel.pdf:PDF},
  groups           = {Erlang},
  modificationdate = {2024-08-25T10:33:40},
}

@Manual{Copyright2018b,
  title            = {Erlang应用手册: System Architecture Support Libraries (SASL)},
  year             = {2018},
  file             = {:Erlang/sasl.pdf:PDF},
  groups           = {Erlang},
  modificationdate = {2024-08-25T10:33:56},
}

@Manual{STDLIB2018a,
  title            = {Erlang应用手册: STDLIB},
  year             = {2018},
  file             = {:Erlang/stdlib.pdf:PDF},
  groups           = {Erlang},
  modificationdate = {2024-08-25T10:33:48},
}

@Misc{JVMAnato16:online,
  howpublished = {\url{https://shipilev.net/jvm-anatomy-park/}},
  note         = {(Accessed on 02/26/2019)},
  title        = {[Java] JVM Anatomy Park},
  comment      = {"JVM Anatomy Park" is the on-going mini-post series, where every post is slated to take 5-10 minutes to read. 

As such, it goes deep for only a single topic, a single test, a single benchmark, a single observation. 

So, the evidence and discussion here are anecdotal, not actually reviewed for errors, consistency, writing style, syntactic and semantic errors, duplicates, or consistency. Use and/or trust this at your own risk.},
  groups       = {JVM},
}

@Misc{JMHJavaM38:online,
  howpublished = {\url{http://tutorials.jenkov.com/java-performance/jmh.html}},
  note         = {(Accessed on 02/26/2019)},
  title        = {[Java] JMH - Java Microbenchmark Harness},
  comment      = {OpenJDK Code Tools: jmh
http://openjdk.java.net/projects/code-tools/jmh/},
  groups       = {JVM},
}

@Misc{Building24:online,
  howpublished     = {\url{https://github.com/AdoptOpenJDK/jitwatch/wiki}},
  note             = {(Accessed on 02/26/2019)},
  title            = {[Java] AdoptOpenJDK/jitwatch: Log analyser / visualiser for Java HotSpot JIT compiler},
  abstract         = {Log analyser / visualiser for Java HotSpot JIT compiler. Inspect inlining decisions, hot methods, bytecode, and assembly. View results in the JavaFX user interface.},
  groups           = {JVM},
  modificationdate = {2022-11-12T14:55:44},
}

@InProceedings{2011a,
  author           = {Pawel Stolowski},
  title            = {Erlang Quick Reference Card v1.0},
  year             = {2011},
  file             = {:Erlang/erlang-quickref.pdf:PDF},
  groups           = {Erlang},
  modificationdate = {2024-08-25T10:33:14},
  url              = {https://github.com/stolowski/Erlang-Quick-Reference-Card},
}

@Book{Donovan2016,
  author           = {Alan A. A. Donovan and Brian W. Kernighan},
  publisher        = {Addison-Wesley},
  title            = {The Go Programming Language},
  year             = {2016},
  comment          = {版本: 1.5(P.xvi)},
  file             = {:Go/The Go Programming Language.pdf:PDF},
  groups           = {Golang},
  modificationdate = {2024-08-25T08:49:24},
  ranking          = {rank5},
}

@Misc{javalang28:online,
  howpublished = {\url{https://docs.oracle.com/javase/7/docs/api/java/lang/instrument/package-summary.html}},
  note         = {(Accessed on 03/04/2019)},
  title        = {java.lang.instrument (Java Platform SE 7 )},
  comment      = {Package java.lang.instrument
https://docs.oracle.com/javase/7/docs/api/java/lang/instrument/package-summary.html

Package com.sun.tools.attach
https://docs.oracle.com/javase/7/docs/jdk/api/attach/spec/com/sun/tools/attach/package-summary.html

Instrumentation 新功能
https://www.ibm.com/developerworks/cn/java/j-lo-jse61/index.html

Guide to Java Instrumentation
https://www.baeldung.com/java-instrumentation},
  groups       = {Java},
}

@Book{Naccache2015,
  author           = {Rafik Naccache},
  publisher        = {Packt Publishing},
  title            = {Clojure Data Structures and Algorithms Cookbook},
  year             = {2015},
  file             = {:Clojure/Clojure Data Structures and Algorithms Cookbook.pdf:PDF},
  groups           = {Clojure},
  modificationdate = {2024-08-25T10:22:12},
}

@Misc{ClojureCheatSheet,
  title            = {Clojure Cheat Sheet (Clojure 1.7 - 1.10, sheet v52)},
  file             = {:Clojure/Clojure Cheat Sheet (Clojure 1.7 - 1.10, sheet v52).pdf:PDF;:Clojure/Clojure Cheat Sheet (Clojure 1.8 - 1.11, sheet v55).pdf:PDF},
  groups           = {Clojure},
  modificationdate = {2024-08-25T10:22:04},
  url              = {https://clojure.org/api/cheatsheet},
}

@Book{Kumar2013,
  author           = {Shantanu Kumar},
  publisher        = {Packt Publishing},
  title            = {Clojure High Performance Programming},
  year             = {2013},
  file             = {:Clojure/Clojure High Performance Programming, 2013.pdf:PDF},
  groups           = {Clojure},
  modificationdate = {2024-08-25T10:22:46},
}

@Book{Emerick2012,
  author           = {Chas Emerick and Brian Carper and Christophe Grand},
  publisher        = {O’Reilly Media},
  title            = {Clojure Programming},
  year             = {2012},
  file             = {:Clojure/Clojure Programming.pdf:PDF},
  groups           = {Clojure},
  modificationdate = {2024-08-25T10:22:53},
}

@Book{Miller2018,
  author           = {Alex Miller and Stuart Halloway and Aaron Bedra},
  publisher        = {The Pragmatic Bookshelf},
  title            = {Programming Clojure},
  year             = {2018},
  edition          = {3},
  file             = {:Clojure/Programming Clojure, 3rd Edition, 2018.pdf:PDF},
  groups           = {Clojure},
  modificationdate = {2024-08-25T10:23:53},
}

@Book{Okasaki1998,
  author           = {Chris Okasaki},
  publisher        = {Cambridge University Press},
  title            = {Purely Functional Data Structures},
  year             = {1998},
  isbn             = {0521631246},
  file             = {:Theory/Purely Functional Data Structures.pdf:PDF},
  groups           = {LanguageTheory},
  modificationdate = {2024-08-25T10:39:38},
}

@Book{Fogus2014,
  author           = {Michael Fogus and Chris Houser},
  publisher        = {Manning Publications},
  title            = {The Joy of Clojure},
  year             = {2014},
  edition          = {2},
  file             = {:Clojure/The Joy of Clojure, 2nd Edition.pdf:PDF},
  groups           = {Clojure},
  modificationdate = {2024-08-25T10:25:23},
}

@Book{Sotnikov2014,
  author           = {Dmitri Sotnikov},
  publisher        = {The Pragmatic Bookshelf},
  title            = {Web Development with Clojure},
  year             = {2014},
  file             = {:Clojure/Web Development with Clojure, 2014.pdf:PDF},
  groups           = {Clojure},
  modificationdate = {2024-08-25T10:25:16},
}

@Book{Kernighan1988,
  author           = {Brian W. Kernighan and Dennis M. Ritchie},
  publisher        = {Prentice-Hall},
  title            = {The C Programming Language},
  year             = {1988},
  edition          = {2},
  file             = {:C/The C Programming Language, 2nd Edition, 1988.pdf:PDF},
  groups           = {C},
  modificationdate = {2024-08-25T10:08:14},
  url              = {https://en.wikipedia.org/wiki/The_C_Programming_Language},
}

@Book{Varghese2015,
  author           = {Shiju Varghese},
  publisher        = {Apress},
  title            = {Web Development with Go},
  year             = {2015},
  isbn             = {978-1-4842-1053-6},
  file             = {:Go/Web Development with Go.pdf:PDF},
  groups           = {Golang},
  modificationdate = {2024-08-25T08:49:51},
}

@Book{Chang2016,
  author           = {Sau Sheong Chang},
  publisher        = {Manning Publications},
  title            = {Go Web Programming},
  year             = {2016},
  isbn             = {9781617292569},
  file             = {:Go/Go Web Programming, 2016.pdf:PDF},
  groups           = {Golang},
  modificationdate = {2024-08-25T08:48:59},
  url              = {https://www.manning.com/books/go-web-programming},
}

@Book{Kennedy2016,
  author           = {William Kennedy and Brian Ketelsen and Erik St. Martin},
  publisher        = {Manning Publications},
  title            = {Go in Action},
  year             = {2016},
  isbn             = {9781617291784},
  file             = {:Go/Go in Action, 2016.pdf:PDF},
  groups           = {Golang},
  modificationdate = {2024-08-25T08:48:51},
}

@Standard{c99,
  organization     = {ISO/IEC},
  title            = {C99},
  year             = {1999},
  file             = {:C/C99 Rationale(n897).pdf:PDF;:C/C99.pdf:PDF},
  groups           = {C},
  modificationdate = {2024-08-25T10:07:30},
}

@Book{Plauger1991,
  author           = {P.J. Plauger},
  publisher        = {Prentice Hall},
  title            = {The Standard C Library},
  year             = {1991},
  isbn             = {0-13-131509-9},
  file             = {:C/The Standard C Library.pdf:PDF},
  groups           = {C},
  modificationdate = {2024-08-25T10:43:10},
}

@Book{ao,
  title            = {C 和指针},
  file             = {:C/C 和指针.pdf:PDF},
  groups           = {C},
  modificationdate = {2024-08-25T10:07:51},
}

@InProceedings{Summit2005a,
  title            = {C语言常见问题集},
  year             = {2005},
  file             = {:C/495个C语言问题.pdf:PDF},
  groups           = {C},
  modificationdate = {2024-08-25T10:08:01},
}

@Misc{almond·A58:online,
  title        = {[Scala] almond: A Scala kernel for Jupyter},
  howpublished = {\url{https://almond.sh/}},
  note         = {(Accessed on 04/02/2019)},
  comment      = {example: A collection of Jupyter notebooks showing what you can do with the Almond Scala kernel.},
  groups       = {Tools},
}

@Misc{lihaoyiA3:online,
  title        = {[Scala] Ammonite: Scala Scripting},
  howpublished = {\url{http://ammonite.io/}},
  note         = {(Accessed on 04/02/2019)},
  groups       = {Tools},
}

@Book{Leonarda,
  author           = {Anghel Leonard},
  title            = {Pro Java 7 NIO.2},
  year             = {2011},
  file             = {:Java/Pro Java 7 NIO.2.pdf:PDF},
  groups           = {Java},
  modificationdate = {2024-08-25T08:58:16},
}

@Book{Darwin2014,
  author           = {Ian F. Darwin},
  publisher        = {O’Reilly Media},
  title            = {Java Cookbook},
  year             = {2014},
  edition          = {3},
  isbn             = {978-1-449-33704-9},
  file             = {:Java/Java Cookbook, 3rd Edition.pdf:PDF},
  groups           = {Java},
  modificationdate = {2024-08-25T08:57:03},
}

@Misc{Enhanced25:online,
  howpublished = {\url{https://ecd-plugin.github.io/ecd/}},
  note         = {(Accessed on 04/09/2019)},
  title        = {[Java反编译器] Enhanced Class Decompiler | ecd},
  groups       = {JVM},
}

@Misc{Compress78:online,
  howpublished     = {\url{https://wiki.openjdk.java.net/display/HotSpot/CompressedOops}},
  note             = {(Accessed on 04/09/2019)},
  title            = {[Java Hotspot] CompressedOops},
  groups           = {JVM},
  modificationdate = {2022-11-12T14:55:52},
}

@Misc{Synchron26:online,
  howpublished     = {\url{https://wiki.openjdk.java.net/display/HotSpot/Synchronization}},
  note             = {(Accessed on 04/09/2019)},
  title            = {[Java Hotspot] Synchronization},
  comment          = {markOop.hpp 对象头
biasedLocking.hpp 偏向锁
objectMonitor.hpp 对象监视器},
  groups           = {JVM},
  modificationdate = {2022-11-12T14:56:09},
}

@Book{Slatkin2019,
  author           = {Brett Slatkin},
  publisher        = {Addison-Wesley Professional},
  title            = {Effective Python},
  year             = {2019},
  edition          = {2},
  isbn             = {978-0-13-403428-7},
  comment          = {480 pages},
  file             = {:Python/Effective Python, 2nd Edition, 2019.pdf:PDF},
  groups           = {Python},
  modificationdate = {2024-08-25T09:17:34},
  ranking          = {rank5},
}

@Book{Summerfield2010,
  author           = {Mark Summerfield},
  publisher        = {Pearson},
  title            = {Programming in Python 3},
  year             = {2010},
  edition          = {2},
  isbn             = {978-0-321-68056-3},
  comment          = {644 pages},
  file             = {:Python/Programming in Python 3, 2nd edition, 2010.pdf:PDF},
  groups           = {Practices-Python, Python},
  modificationdate = {2024-08-25T09:19:00},
}

@Book{Lutz2011,
  author           = {Mark Lutz},
  publisher        = {O’Reilly Media},
  title            = {Programming Python},
  year             = {2011},
  edition          = {4},
  isbn             = {978-0-596-15810-1},
  comment          = {Covers Python 3.x.
1628 pages},
  file             = {:Python/Programming Python 4th Edition.pdf:PDF},
  groups           = {Python},
  modificationdate = {2024-08-25T09:18:51},
}

@Book{Zaccone2015,
  author           = {Giancarlo Zaccone},
  publisher        = {Packt},
  title            = {Python Parallel Programming Cookbook},
  year             = {2015},
  isbn             = {978-1-78528-958-3},
  file             = {:Python/Python Parallel Programming Cookbook, 2015.pdf:PDF},
  groups           = {Practices-Python, Python},
  modificationdate = {2024-08-25T09:19:41},
}

@Book{Lutz2013,
  author           = {Mark Lutz},
  publisher        = {O’Reilly Media},
  title            = {Learning Python},
  year             = {2013},
  edition          = {5},
  isbn             = {978-1-449-35573-9},
  comment          = {Updated for 3.3 and 2.7
1594 pages

as a reference, not intended to read.},
  file             = {:Python/Learning Python 5th Edition.pdf:PDF},
  groups           = {Practices-Python, Python},
  modificationdate = {2024-08-25T09:17:56},
  url              = {https://www.oreilly.com/library/view/learning-python-5th/9781449355722},
}

@Book{Friedl2006,
  author           = {Jeffrey E. F. Friedl},
  editor           = {Andy Oram},
  publisher        = {O’Reilly Media},
  title            = {Mastering Regular Expressions},
  year             = {2006},
  edition          = {3},
  file             = {:Compiler/Mastering Regular Expressions, 3rd edition, 2006.pdf:PDF},
  groups           = {Compiler},
  modificationdate = {2024-08-25T10:18:42},
  ranking          = {rank5},
}

@Book{Touretzky1990,
  author           = {David S. Touretzky},
  editor           = {Alan Apt},
  publisher        = {The Benjamin/Cummings Publishing Company, Inc},
  title            = {COMMON LISP: A Gentle Introduction to Symbolic Computation},
  year             = {1990},
  isbn             = {0-8053-0492-4},
  comment          = {587 pages},
  file             = {:[Common Lisp]Common LISP - A Gentle Introduction to Symbolic Computation.pdf:PDF},
  groups           = {Common Lisp},
  modificationdate = {2024-08-25T08:37:48},
  url              = {https://www.cs.cmu.edu/~dst/LispBook/index.html},
}

@Book{Seibel2005,
  author           = {Peter Seibel},
  editor           = {Gary Cornell},
  publisher        = {Apress},
  title            = {Practical Common Lisp},
  year             = {2005},
  isbn             = {1-59059-239-5},
  comment          = {528 pages},
  file             = {:Practical Common Lisp.pdf:PDF},
  groups           = {Common Lisp},
  modificationdate = {2024-08-25T08:39:47},
  ranking          = {rank5},
  url              = {https://gigamonkeys.com/book/},
}

@Book{Mitchell1996a,
  author           = {John C. Mitchell},
  editor           = {Michael R. Garey, Albert Meyer},
  publisher        = {The MIT Press},
  title            = {Foundations for Programming Languages},
  year             = {1996},
  isbn             = {978-0262133210},
  month            = sep,
  file             = {:Theory/Foundations for Programming Languages.pdf:PDF},
  groups           = {LanguageTheory},
  modificationdate = {2024-08-25T10:39:14},
}

@Misc{Introduc23:online,
  howpublished     = {\url{http://intrologic.stanford.edu/public/index.php}},
  note             = {(Accessed on 09/23/2019)},
  title            = {Introduction to Logic},
  groups           = {LanguageTheory},
  modificationdate = {2024-08-25T10:36:06},
  url              = {http://intrologic.stanford.edu/public/index.php},
}

@Article{Pitman1985,
  author           = {Kent M. Pitman},
  title            = {Exceptional situations in Lisp},
  year             = {1985},
  file             = {:Lisp/Exceptional Situations in Lisp.pdf:PDF;:Lisp/Practical Common Lisp - Distilled.pdf:PDF},
  groups           = {Common Lisp},
  modificationdate = {2024-08-25T08:39:06},
  publisher        = {MIT Artificial Intelligence Laboratory},
}

@Misc{sonatype32:online,
  title        = {[Maven] Maven: The Complete Reference},
  howpublished = {\url{https://github.com/sonatype/maven-reference-en}},
  note         = {(Accessed on 10/09/2019)},
  file         = {:Maven_the_reference_guide.pdf:PDF},
  groups       = {Tools},
}

@Misc{GarbageC44:online,
  howpublished     = {\url{https://wiki.openjdk.java.net/display/HotSpot/Garbage+Collection}},
  note             = {(Accessed on 10/09/2019)},
  title            = {[Java Hotspot] Garbage Collection},
  comment          = {Storage Management
HotSpot Glossary of Terms},
  groups           = {JVM},
  modificationdate = {2022-11-12T14:56:14},
}

@Misc{HotSpotG42:online,
  howpublished     = {\url{http://openjdk.java.net/groups/hotspot/}},
  note             = {(Accessed on 10/09/2019)},
  title            = {[Java Hotspot] HotSpot Group},
  comment          = {Documentation:
A glossary of terms found in the HotSpot sources and documentation.
An overview of the runtime system
An overview of the serviceability features
An overview of the storage management system},
  groups           = {JVM},
  modificationdate = {2022-11-12T14:56:11},
}

@Misc{JavaHotS91:online,
  howpublished     = {\url{https://www.oracle.com/technetwork/java/javase/tech/vmoptions-jsp-140102.html}},
  note             = {(Accessed on 10/09/2019)},
  title            = {[Java] Java HotSpot VM Options},
  groups           = {JVM},
  modificationdate = {2022-11-12T14:55:48},
}

@Misc{Overview22:online,
  howpublished = {\url{https://www.ibm.com/developerworks/community/groups/service/html/communityview?communityUuid=4544bafe-c7a2-455f-9d43-eb866ea60091}},
  note         = {(Accessed on 10/09/2019)},
  title        = {[Java] IBM HeapAnalyzer},
  groups       = {JVM},
}

@Book{Bramer2013,
  author           = {Max Bramer},
  publisher        = {Springer},
  title            = {Logic Programming with Prolog},
  year             = {2013},
  edition          = {2},
  isbn             = {978-1-4471-5486-0},
  file             = {:Logic Programming with Prolog, 2nd Edition.pdf:PDF},
  groups           = {Prolog},
  modificationdate = {2024-08-25T10:42:27},
}

@Standard{ISOIEC132111,
  title            = {Information technology - Programminglanguages - Prolog - Part 1: General core},
  comment          = {Information technology - Programming languages - Prolog - Part 1: General core},
  file             = {:Logic/ISO IEC 13211-1.pdf:PDF},
  groups           = {Prolog},
  modificationdate = {2024-08-25T10:42:20},
}

@Misc{JSR133Cookbook,
  howpublished     = {\url{http://gee.cs.oswego.edu/dl/jmm/cookbook.html}},
  note             = {(Accessed on 10/30/2019)},
  title            = {The JSR-133 Cookbook for Compiler Writers},
  file             = {:JVM/The JSR-133 Cookbook.htm:htm},
  groups           = {JVM},
  modificationdate = {2024-08-25T09:05:37},
  url              = {http://gee.cs.oswego.edu/dl/jmm/cookbook.html},
}

@Misc{TheJavaM37:online,
  howpublished     = {\url{https://www.cs.umd.edu/~pugh/java/memoryModel/}},
  note             = {(Accessed on 10/30/2019)},
  title            = {The Java Memory Model},
  file             = {:JVM/The Java Memory Model.htm:htm;:JVM/jsr133.pdf:PDF;:JVM/JSR133中文版.pdf:PDF},
  groups           = {JVM},
  modificationdate = {2024-08-25T09:05:29},
}

@Book{Stroustrup2018,
  author           = {Bjarne Stroustrup},
  publisher        = {Pearson Education},
  title            = {A Tour of C++},
  year             = {2018},
  edition          = {2},
  isbn             = {978-0-13-499783-4},
  month            = jun,
  file             = {:C/A Tour of C++, 2nd Edition, 2018.pdf:PDF},
  groups           = {C++},
  modificationdate = {2024-08-25T10:10:23},
}

@Book{e,
  title            = {C Programming: A Modern Approach-},
  file             = {:C Programming - A Modern Approach, 2nd edition.pdf:PDF},
  groups           = {C},
  modificationdate = {2024-08-25T09:59:44},
}

@Standard{c11,
  organization     = {ISO/IEC},
  title            = {C11},
  year             = {2011},
  comment          = {The Standard: https://www.iso-9899.info/wiki/The_Standard},
  file             = {:C/C11(n1570).pdf:PDF},
  groups           = {C},
  modificationdate = {2024-08-25T10:07:11},
}

@Book{Loredana2017,
  author           = {Stefania Loredana, NitaMarius Mihailescu},
  publisher        = {Apress},
  title            = {Practical Concurrent Haskell With Big Data Applications},
  year             = {2017},
  isbn             = {978-1-4842-2780-0},
  doi              = {10.1007/978-1-4842-2781-7},
  file             = {:Haskell/Practical Concurrent Haskell With Big Data Applications.pdf:PDF},
  groups           = {Haskell},
  modificationdate = {2024-08-25T09:38:09},
}

@Book{Marlow2013,
  author           = {Simon Marlow},
  publisher        = {O’Reilly Media},
  title            = {Parallel and Concurrent Programming in Haskell},
  year             = {2013},
  isbn             = {978-1-449-33594-6},
  file             = {:Haskell/Parallel and Concurrent Programming in Haskell.pdf:PDF},
  groups           = {Haskell},
  modificationdate = {2024-08-25T09:38:00},
}

@Book{Snoyman2015,
  author           = {Michael Snoyman},
  publisher        = {O’Reilly Media},
  title            = {Developing Web Apps with Haskell and Yesod},
  year             = {2015},
  edition          = {2},
  isbn             = {978-1-491-91559-2},
  file             = {:Haskell/Developing Web Apps with Haskell and Yesod, 2nd Edition.pdf:PDF},
  groups           = {Haskell},
  modificationdate = {2024-08-25T09:37:10},
  url              = {https://www.yesodweb.com/book},
}

@Book{Stroustrup2013,
  author           = {Bjarne Stroustrup},
  publisher        = {Addison-Wesley},
  title            = {[04]The C++ Programming Language},
  year             = {2013},
  edition          = {4},
  isbn             = {978-0-321-56384-2},
  file             = {:C/The C++ Programming Language.pdf:PDF},
  groups           = {C++},
  modificationdate = {2024-08-25T10:08:48},
  ranking          = {rank5},
}

@Book{Koenig2000,
  author           = {Andrew Koenig and Barbara E. Moo},
  publisher        = {Addison-Wesley},
  title            = {Accelerated C++: Practical Programming by Example},
  year             = {2000},
  file             = {:C/Accelerated C++ - Practical Programming by Example.pdf:PDF;:C/Accelerated C++.pdf:PDF},
  groups           = {C++},
  modificationdate = {2024-08-25T10:10:15},
}

@Book{Meyers2014,
  author           = {Scott Meyers},
  publisher        = {O’Reilly Media},
  title            = {Effective Modern C++},
  year             = {2014},
  isbn             = {978-1-491-90399-5},
  file             = {:C/Effective Modern C++.pdf:PDF},
  groups           = {C++},
  modificationdate = {2024-08-25T10:11:27},
}

@Book{Lippman2013,
  author           = {Stanley B. Lippman, Josée Lajoie, Barbara E. Moo},
  publisher        = {Addison-Wesley},
  title            = {[03]C++ Primer},
  year             = {2013},
  edition          = {5},
  isbn             = {978-0-321-71411-4},
  comment          = {Introductory, no previous programming experience},
  file             = {:C/C++ Primer, 5th Edition, 2013.pdf:PDF},
  groups           = {C++},
  modificationdate = {2024-08-25T10:08:35},
  ranking          = {rank5},
  url              = {https://www.informit.com/store/c-plus-plus-primer-9780321714114},
}

@Misc{ScottMey56:online,
  author       = {Scott Meyers},
  howpublished = {\url{https://aristeia.com/BookErrata/ec++3e-errata.html}},
  note         = {(Accessed on 03/16/2020)},
  title        = {Modification History and Errata List for Effective C++, Third Edition},
  groups       = {C++},
}

@Standard{Cplusplus11,
  organization     = {ISO/IEC},
  title            = {[05]Information technology — Programminglanguages — C++ 11},
  month            = sep,
  number           = {ISO/IEC 14882:2011(E)},
  revision         = {Third edition},
  year             = {2011},
  file             = {:C/ISO IEC 14882 2011 (C++11).pdf:PDF},
  groups           = {C++},
  modificationdate = {2024-08-25T10:08:57},
}

@Book{Williams2019,
  author           = {Anthony Williams},
  publisher        = {Manning Publications},
  title            = {C++ Concurrency in Action},
  year             = {2019},
  file             = {:C/C++ Concurrency in Action, 2nd Edition, 2019.pdf:PDF},
  groups           = {C++},
  modificationdate = {2024-08-25T10:10:48},
  ranking          = {rank5},
}

@Book{Blandy2021,
  author           = {Jim Blandy and Jason Orendorff and Leonora F.S. Tindall},
  publisher        = {O’Reilly Media},
  title            = {Programming Rust},
  year             = {2021},
  edition          = {2},
  isbn             = {978-1-492-05259-3},
  comment          = {735 pages

Code: https://github.com/ProgrammingRust

2nd Edition: 1.50

Revised Edition: Rust 2021 Edition, https://www.oreilly.com/library/view/programming-rust-2nd/9781492052586/},
  file             = {:Rust/Programming Rust, 2nd Edition, 2021.pdf:PDF},
  groups           = {Rust},
  modificationdate = {2024-08-25T10:05:41},
  ranking          = {rank5},
  url              = {https://www.oreilly.com/library/view/programming-rust-2nd/9781492052586/},
}

@Book{Reis2012,
  author           = {Anthony J. Dos Reis},
  publisher        = {Wiley},
  title            = {Compiler Construction Using Java JavaCC and Yacc},
  year             = {2012},
  file             = {:Compiler/Compiler Construction Using Java JavaCC and Yacc.pdf:PDF},
  groups           = {Compiler},
  modificationdate = {2024-08-25T10:17:50},
}

@Book{Copeland2009,
  author           = {Tom Copeland},
  publisher        = {Centennial Books},
  title            = {Generating Parsers with JavaCC},
  year             = {2009},
  isbn             = {0-9762214-3-8},
  file             = {:Compiler/Generating Parsers with JavaCC.pdf:PDF},
  groups           = {Compiler},
  modificationdate = {2024-08-25T10:18:25},
}

@Misc{BiasedLo55:online,
  author           = {Dave Dice},
  howpublished     = {\url{https://blogs.oracle.com/dave/biased-locking-in-hotspot}},
  note             = {(Accessed on 09/17/2020)},
  title            = {Biased Locking in HotSpot | Oracle David Dice's Blog},
  groups           = {JVM},
  modificationdate = {2022-11-12T14:56:06},
}

@Book{Zhou2019,
  author           = {周志明},
  publisher        = {机械工业出版社},
  title            = {深入理解Java虚拟机: JVM高级特性与最佳实践},
  year             = {2019},
  file             = {:深入理解Java虚拟机-JVM高级特性与最佳实践(第3版).pdf:PDF},
  groups           = {JVM},
  modificationdate = {2024-08-25T09:05:53},
}

@Book{Chen2014,
  author           = {陈涛},
  publisher        = {人民邮电出版社},
  title            = {HotSpot实战},
  year             = {2014},
  file             = {:JVM/HotSpot实战.pdf:PDF},
  groups           = {JVM},
  modificationdate = {2024-08-25T09:03:16},
}

@TechReport{HotSpotMM2006,
  institution      = {Sun Microsystems},
  title            = {Memory Management in the JavaHotSpot™ Virtual Machine},
  year             = {2006},
  file             = {:JVM/Memory Management in the Java HotSpot™ Virtual Machine.pdf:PDF},
  groups           = {JVM},
  modificationdate = {2024-08-25T09:03:34},
}

@Misc{TheZGarb52:online,
  author           = {Per Lidén, Stefan Karlsson},
  howpublished     = {\url{http://cr.openjdk.java.net/~pliden/slides/ZGC-FOSDEM-2018.pdf}},
  note             = {(Accessed on 10/23/2020)},
  title            = {The Z Garbage Collector - An Introduction},
  year             = {2018},
  file             = {:JVM/The Z Garbage Collector - An Introduction.pdf:PDF},
  groups           = {JVM},
  modificationdate = {2024-08-25T09:05:44},
}

@Book{Abelson1996,
  author           = {Harold Abelson, Gerald Jay Sussman, Julie Sussman},
  publisher        = {The MIT Press},
  title            = {Structure and Interpretation of Computer Programs(计算机程序的构造和解释)},
  year             = {1996},
  edition          = {2},
  isbn             = {978-0262510875},
  comment          = {883 pages},
  file             = {:Lisp/Structure and Interpretation of Computer Programs, 1996.pdf:PDF;:Lisp/计算机程序的构造和解释.pdf:PDF},
  groups           = {Scheme},
  modificationdate = {2024-08-25T08:43:40},
  ranking          = {rank5},
  url              = {https://mitpress.mit.edu/sites/default/files/sicp/full-text/book/book.html},
}

@Book{TSPL,
  author           = {R. Kent Dybvig},
  publisher        = {The MIT Press},
  title            = {The Scheme Programming Language},
  year             = {2009},
  edition          = {4},
  comment          = {400 pages

Chez Scheme
https://github.com/cisco/ChezScheme

Chez Scheme Version 9 User's Guide
https://cisco.github.io/ChezScheme/csug9.5/csug.html

R6RS
http://www.r6rs.org/},
  file             = {:The Scheme Programming Language, 4th Edition.pdf:PDF},
  groups           = {Scheme},
  keywords         = {Chez Scheme},
  modificationdate = {2024-08-25T08:44:03},
  ranking          = {rank5},
  url              = {https://www.scheme.com/tspl4/},
}

@TechReport{r5rs,
  author           = {Richard Kelsey, William Clinger, Jonathan Rees},
  title            = {Revised(5) Report on the Algorithmic Language Scheme},
  year             = {1998},
  file             = {:Lisp/r5rs.pdf:PDF},
  groups           = {Scheme},
  modificationdate = {2024-08-25T08:42:30},
}

@Misc{Introduc67:online,
  author       = {Takafumi Shido},
  howpublished = {\url{https://deathking.github.io/yast-cn/}},
  note         = {(Accessed on 12/04/2020)},
  title        = {Yet Another Scheme Tutorial},
  comment      = {http://www.shido.info/lisp/idx_scm_e.html},
  groups       = {Scheme},
}

@Misc{MITGNUSc77:online,
  howpublished = {\url{https://www.gnu.org/software/mit-scheme/}},
  note         = {(Accessed on 12/05/2020)},
  title        = {MIT/GNU Scheme},
  groups       = {Scheme},
}

@TechReport{r6rs,
  author           = {Richard Kelsey, William Clinger, Jonathan Rees},
  title            = {Revised(6) Report on the Algorithmic Language Scheme},
  year             = {2007},
  file             = {:Lisp/r6rs/r6rs.pdf:PDF;:Lisp/r6rs.tar.gz:gz},
  groups           = {Scheme},
  modificationdate = {2024-08-25T08:43:15},
  url              = {https://www.r6rs.org/},
}

@TechReport{r7rs,
  author           = {Richard Kelsey, William Clinger, Jonathan Rees},
  title            = {Revised(7) Report on the Algorithmic Language Scheme},
  year             = {2013},
  file             = {:Lisp/r7rs.pdf:PDF},
  groups           = {Scheme},
  modificationdate = {2024-08-25T08:43:06},
}

@Article{Bawden1999,
  author           = {Alan Bawden},
  title            = {Quasiquotation in Lisp},
  year             = {1999},
  file             = {:Lisp/Quasiquotation in Lisp.pdf:PDF},
  groups           = {Lisp},
  modificationdate = {2024-08-25T08:36:29},
}

@Article{Hieb1992,
  author           = {Dybvig, R. Kent and Hieb, Robert and Bruggeman, Carl},
  journal          = {Lisp Symb. Comput.},
  title            = {Syntactic Abstraction in Scheme},
  year             = {1992},
  issn             = {0892-4635},
  month            = dec,
  number           = {4},
  pages            = {295–326},
  volume           = {5},
  address          = {USA},
  doi              = {10.1007/BF01806308},
  file             = {:Lisp/Syntactic Abstraction in Scheme.pdf:PDF},
  groups           = {Scheme},
  issue_date       = {Dec. 1992},
  modificationdate = {2024-08-25T08:43:52},
  numpages         = {32},
  publisher        = {Kluwer Academic Publishers},
  url              = {https://doi.org/10.1007/BF01806308},
}

@TechReport{Dybvig1992,
  author           = {R. Kent Dybvig},
  title            = {Writing hygienic macros in scheme with syntax-case},
  year             = {1992},
  file             = {:Lisp/Writing Hygienic Macros in Scheme with Syntax-Case.pdf:PDF},
  groups           = {Scheme},
  modificationdate = {2024-08-25T08:44:13},
}

@Book{Martin2009,
  author    = {Robert C. Martin},
  publisher = {Pearson Education},
  title     = {Clean Code},
  year      = {2009},
  isbn      = {0-13-235088-2},
  file      = {:Clean Code.pdf:PDF},
  groups    = {Programming},
}

@Book{Yu2009,
  author           = {余甲子 and 石凡 and 潘爱民},
  publisher        = {电子工业出版社},
  title            = {程序员的自我修养: 链接、装载与库},
  year             = {2009},
  file             = {:Compiler/程序员的自我修养--链接、装载与库.pdf:PDF},
  groups           = {Compiler},
  modificationdate = {2024-08-25T10:19:13},
}

@Book{Meyers2005,
  author           = {Scott Meyers},
  publisher        = {Pearson Education},
  title            = {Effective C++},
  year             = {2005},
  file             = {:C/Effective C++中文版（第三版）.pdf:PDF;:C/More Effective C++ 國際中文版.pdf:PDF},
  groups           = {C++},
  modificationdate = {2024-08-25T10:11:15},
}

@Book{Polukhin2013,
  author           = {Antony Polukhin},
  publisher        = {Packt},
  title            = {Boost C++ Application Development Cookbook},
  year             = {2013},
  file             = {:C/Boost C++ Application Development Cookbook.pdf:PDF},
  groups           = {C++},
  modificationdate = {2024-08-25T10:10:30},
  readstatus       = {read},
}

@Book{Stevanovic2014,
  author           = {Milan Stevanovic},
  publisher        = {Apress},
  title            = {Advanced C and C++ Compiling},
  year             = {2014},
  file             = {:Compiler/Advanced C and C++ Compiling.pdf:PDF},
  groups           = {Compiler},
  modificationdate = {2024-08-25T10:17:41},
}

@Book{Luo2016,
  author           = {罗剑锋},
  publisher        = {清华大学出版社},
  title            = {C++11/14高级编程-Boost程序库探秘},
  year             = {2016},
  file             = {:C/C++11_14高级编程 Boost程序库探秘.pdf:PDF},
  groups           = {C++},
  modificationdate = {2024-08-25T10:10:38},
}

@Book{Pithawala2013,
  author           = {Hussain Pithawala},
  publisher        = {Packt Publishing},
  title            = {Learning Google Guice},
  year             = {2013},
  isbn             = {978-1-78328-189-3},
  comment          = {132 pages

version: 3.0 (Preface)

Code: https://bitbucket.org/hussain-pithawala/begin_guice/src/master/},
  file             = {:Java/Learning Google Guice.pdf:PDF},
  groups           = {Java},
  modificationdate = {2024-08-25T08:58:00},
}

@Book{Prata2014,
  author           = {Stephen Prata},
  publisher        = {Pearson Education},
  title            = {C Primer Plus},
  year             = {2014},
  edition          = {6},
  file             = {:C/C Primer Plus, 6th Edition, 2014.pdf:PDF},
  groups           = {C},
  modificationdate = {2024-08-25T10:07:41},
}

@Book{Josuttis2012,
  author           = {Nicolai Josuttis},
  publisher        = {Addison-Wesley Professional},
  title            = {The C++ Standard Library: A Tutorial and Reference},
  year             = {2012},
  edition          = {2},
  isbn             = {978-0321623218},
  month            = mar,
  file             = {:C/The C++ Standard Library, 2nd Edition, 2012.pdf:PDF},
  groups           = {C++},
  modificationdate = {2024-08-25T10:11:59},
}

@Book{Lopes2014,
  author           = {Bruno Cardoso Lopes and Rafael Auler},
  publisher        = {Packt Publishing},
  title            = {Getting Started with LLVM Core Libraries},
  year             = {2014},
  file             = {:Compiler/Getting Started with LLVM Core Libraries, 2014.pdf:PDF},
  groups           = {LLVM},
  modificationdate = {2024-08-25T10:19:42},
}

@Book{Sarda2015,
  author           = {Suyog Sarda and Mayur Pandey},
  publisher        = {Packt Publishing},
  title            = {LLVM Essentials},
  year             = {2015},
  file             = {:LLVM Essentials, 2015.pdf:PDF;:Compiler/LLVM Essentials, 2015.pdf:PDF},
  groups           = {LLVM},
  modificationdate = {2024-08-25T10:20:33},
  ranking          = {rank5},
}

@MastersThesis{Lattner2002,
  author           = {Chris Arthur Lattner},
  school           = {University of Illinois at Urbana-Champaign},
  title            = {LLVM: An Infrastructure for Multi-stage Optimization},
  year             = {2002},
  file             = {:Compiler/LLVM- An Infrastructure for Multi-Stage Optimization, Master Thesis, 2002.pdf:PDF},
  groups           = {LLVM},
  modificationdate = {2024-08-25T10:20:27},
}

@InProceedings{Lattner2004,
  author           = {Chris Lattner and Vikram Adve},
  booktitle        = {Proceedings of the 2004 International Symposium on Code Generation and Optimization (CGO'04)},
  title            = {LLVM: A Compilation Framework for Lifelong Program Analysis \& Transformation},
  year             = {2004},
  address          = {Palo Alto, California},
  month            = mar,
  abstract         = {This paper describes LLVM (Low Level Virtual Machine), a compiler framework designed to support transparent, lifelong program analysis and transformation for arbitrary programs, by providing high-level information to compiler transformations at compile-time, link-time, run-time, and in idle time between runs. LLVM defines a common, low-level code representation in Static Single Assignment (SSA) form, with several novel features: a simple, language-independent type-system that exposes the primitives commonly used to implement high-level language features; an instruction for typed address arithmetic; and a simple mechanism that can be used to implement the exception handling features of high-level languages (and setjmp/longjmp in C) uniformly and efficiently. The LLVM compiler framework and code representation together provide a combination of key capabilities that are important for practical, lifelong analysis and transformation of programs. To our knowledge, no existing compilation approach provides all these capabilities. We describe the design of the LLVM representation and compiler framework, and evaluate the design in three ways: (a) the size and effectiveness of the representation, including the type information it provides; (b) compiler performance for several interprocedural problems; and (c) illustrative examples of the benefits LLVM provides for several challenging compiler problems.},
  file             = {:Compiler/LLVM- A Compilation Framework for Lifelong Program Analysis and Transformation, 2004.pdf:PDF;:Compiler/Introduction to the LLVM Compiler System, PPT, 2008.pdf:PDF},
  groups           = {LLVM},
  modificationdate = {2024-08-25T10:20:18},
  url              = {https://llvm.org/pubs/2004-01-30-CGO-LLVM.html},
}

@Manual{Bruneton2011,
  title            = {ASM 4.0: A Java bytecode engineering library},
  author           = {Eric Bruneton},
  edition          = {2.0},
  abstract         = {ASM is an all purpose Java bytecode manipulation and analysis framework. It can be used to modify existing classes or to dynamically generate classes, directly in binary form. ASM provides some common bytecode transformations and analysis algorithms from which custom complex transformations and code analysis tools can be built. ASM offers similar functionality as other Java bytecode frameworks, but is focused on performance. Because it was designed and implemented to be as small and as fast as possible, it is well suited for use in dynamic systems (but can of course be used in a static way too, e.g. in compilers).},
  file             = {:JVM/ASM 4.0- A Java bytecode engineering library.pdf:PDF},
  groups           = {JVM},
  modificationdate = {2024-08-25T09:02:52},
  url              = {https://asm.ow2.io},
}

@Book{Griffith2002,
  author           = {Arthur Griffith},
  publisher        = {McGraw-Hill},
  title            = {GCC:The Complete Reference},
  year             = {2002},
  isbn             = {978-0-07-222405-4},
  comment          = {647 pages},
  doi              = {10.1036/0072228164},
  file             = {:Compiler/GCC The Complete Reference.pdf:PDF},
  groups           = {GCC},
  modificationdate = {2024-08-25T10:19:31},
}

@Book{Wang2017,
  author           = {王亚刚},
  publisher        = {机械工业出版社},
  title            = {深入分析GCC-},
  year             = {2017},
  isbn             = {978-7-111-55632-9},
  groups           = {GCC},
  modificationdate = {2024-08-25T10:16:03},
}

@Book{Gough2004,
  author           = {Brian Gough},
  publisher        = {Network Theory Limited},
  title            = {An Introduction to GCC: for the GNU Compilers gcc and g++},
  year             = {2004},
  isbn             = {0-9541617-9-3},
  month            = mar,
  file             = {:Compiler/An Introduction to GCC- for the GNU Compilers gcc and g++.pdf:PDF},
  groups           = {GCC},
  modificationdate = {2024-08-25T10:19:22},
  url              = {http://www.network-theory.co.uk/gcc/intro/},
}

@Misc{CppBookGuideList,
  howpublished = {\url{https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list/388282#388282}},
  note         = {(Accessed on 01/05/2022)},
  title        = {[00]The Definitive C++ Book Guide and List - Stack Overflow},
  groups       = {C++},
  readstatus   = {read},
}

@Misc{StroustrupHomepage,
  author       = {Bjarne Stroustrup},
  howpublished = {\url{https://www.stroustrup.com/index.html}},
  note         = {(Accessed on 01/05/2022)},
  title        = {[01]Bjarne Stroustrup's Homepage},
  groups       = {C++},
}

@Book{Stroustrup2014,
  author           = {Bjarne Stroustrup},
  publisher        = {Pearson Education},
  title            = {[02]Programming: Principles and Practice Using C++},
  year             = {2014},
  edition          = {2},
  isbn             = {978-0-321-99278-9},
  month            = may,
  comment          = {Introductory, no previous programming experience

2022-02-10 first skimming},
  file             = {:C/Programming- Principles and Practice Using C++, 2nd Edition, 2014.pdf:PDF},
  groups           = {C++},
  modificationdate = {2024-08-25T10:08:27},
  ranking          = {rank5},
  url              = {https://www.stroustrup.com/programming.html},
}

@Misc{cppreference,
  howpublished     = {\url{https://en.cppreference.com/w/}},
  title            = {[Ref]C++ reference and C reference},
  comment          = {C++ reference
C++98, C++03, C++11, C++14, C++17, C++20, C++23

C reference
C89, C95, C99, C11, C17, C23},
  file             = {:C/n3337_CPP11 post.pdf:PDF;:C/n4140_CPP14.pdf:PDF;:C/n4659_CPP17.pdf:PDF;:C/n4861_CPP20.pdf:PDF;:C/n4868_CPP20 post.pdf:PDF;:C/n4901_CPP23.pdf:PDF},
  groups           = {C++},
  modificationdate = {2024-08-25T10:10:01},
  timestamp        = {2022-02-09},
}

@Misc{cplusplus,
  howpublished = {\url{https://www.cplusplus.com/reference/}},
  title        = {[Ref]Standard C++ Library reference},
  groups       = {C++},
}

@Book{Pierce2002,
  author           = {Benjamin C. Pierce},
  publisher        = {The MIT Press},
  title            = {Types and Programming Languages},
  year             = {2002},
  isbn             = {0-262-16209-1},
  abstract         = {The study of type systems—and of programming languages from a type theoretic perspective—has become an energetic field with major applications in software engineering, language design, high-performance compiler implementation, and security. This text offers a comprehensive introduction to the fundamental definitions, results, and techniques in the area.

Required Background
Readers should be familiar with at least one higher-order functional programming language (Scheme, ML, Haskell, etc.), and with basic concepts of programming languages and compilers (abstract syntax, BNF grammars, evaluation, abstract machines, etc.). ... Experience with an object-oriented language such as Java (Arnold and Gosling, 1996) is useful in several chapters.
The chapters on concrete implementations of typecheckers present significant code fragments in OCaml (or Objective Caml), a popular dialect of ML.},
  file             = {:OCaml/Types and Programming Languages.pdf:PDF},
  groups           = {OCaml},
  modificationdate = {2024-08-25T09:44:59},
  ranking          = {rank5},
  url              = {https://www.cis.upenn.edu/~bcpierce/tapl/},
}

@Book{Aho2007,
  author           = {Alfred V. Aho and Monica S. Lam and Ravi Sethi and Jeffrey D. Ullman},
  publisher        = {Pearson},
  title            = {Compilers: Principles, Techniques, and Tools},
  year             = {2007},
  edition          = {2},
  isbn             = {9780321486813},
  file             = {:Compiler/Compilers- Principles, Techniques, and Tools, 2006.pdf:PDF},
  groups           = {Compiler},
  modificationdate = {2024-08-25T10:18:00},
  ranking          = {rank5},
  url              = {https://suif.stanford.edu/dragonbook/},
}

@Misc{LLVMLangRef,
  howpublished = {\url{https://llvm.org/docs/LangRef.html}},
  title        = {LLVM Language Reference Manual},
  groups       = {LLVM},
}

@Book{Lakos1996,
  author           = {John Lakos},
  publisher        = {Addison-Wesley},
  title            = {[06] Large-scale C++ Software Design-},
  year             = {1996},
  isbn             = {0-201-63362-0},
  file             = {:Large-Scale C++ Software Design.pdf:PDF},
  groups           = {C++},
  modificationdate = {2024-08-25T10:02:05},
}

@InBook{Maier2018,
  author           = {Maier, David and Tekle, K. Tuncay and Kifer, Michael and Warren, David S.},
  pages            = {3–100},
  publisher        = {Association for Computing Machinery and Morgan \&amp; Claypool},
  title            = {Datalog: Concepts, History, and Outlook},
  year             = {2018},
  isbn             = {9781970001990},
  abstract         = {This chapter is a survey of the history and the main concepts of Datalog.We begin with an introduction to the language and its use for database definition and querying. We then look back at the threads from logic languages, databases, artificial intelligence, and expert systems that led to the emergence of Datalog and reminiscence about the origin of the name. We consider the interaction of recursion with other common data language features, such as negation and aggregation, and look at other extensions, such as constraints, updates, and object-oriented features.We provide an overview of the main approaches to Datalog evaluation and their variants, then recount some early implementations of Datalog and of similar deductive database systems.We speculate on the reasons for the decline in the interest in the language in the 1990s and the causes for its later resurgence in a number of application areas.We conclude with several examples of current systems based on or supporting Datalog and briefly examine the performance of some of them.},
  booktitle        = {Declarative Logic Programming: Theory, Systems, and Applications},
  file             = {:Logic/Declarative Logic Programming- Theory, Systems, and Applications, 2018.pdf:PDF},
  groups           = {Datalog},
  modificationdate = {2024-08-25T10:42:01},
  numpages         = {98},
  url              = {https://doi.org/10.1145/3191315.3191317},
}

@Book{Kifer2018,
  editor           = {Michael Kifer and Yanhong Annie Liu},
  publisher        = {Association for Computing Machinery and Morgan \&amp; Claypool},
  title            = {Declarative Logic Programming: Theory, Systems, and Applications},
  year             = {2018},
  isbn             = {9781970001990},
  volume           = {20},
  abstract         = {Logic Programming (LP) is at the nexus of knowledge representation, AI, mathematical logic, databases, and programming languages. It allows programming to be more declarative, by specifying “what” to do instead of “how” to do it. This field is fascinating and intellectually stimulating due to the fundamental interplay among theory, systems, and applications brought about by logic. Several books cover the basics of LP but they focus mostly on the Prolog language. There is generally a lack of accessible collections of articles covering the key aspects of LP, such as the well-founded vs. stable semantics for negation, constraints, object-oriented LP, updates, probabilistic LP, and implementation methods, including top-down vs. bottom-up evaluation and tabling.For systems, the situation is even less satisfactory, lacking expositions of LP inference machinery that supports tabling and other state-of-the-art implementation techniques. There is also a dearth of articles about systems that support truly declarative languages, especially those that tie into first-order logic, mathematical programming, and constraint programming. Also rare are surveys of challenging application areas of LP, such as bioinformatics, natural language processing, verification, and planning, as well as analysis of LP applications based on language abstractions and implementations methods.The goal of this book is to help fill in the void in the literature with state-of-the-art surveys on key aspects of LP. Much attention was paid to making these surveys accessible to researchers, practitioners, and graduate students alike.},
  file             = {:Logic/Declarative Logic Programming- Theory, Systems, and Applications, 2018.pdf:PDF},
  groups           = {LogicProgramming},
  modificationdate = {2024-08-25T10:41:44},
}

@Book{Greco2015,
  author           = {Sergio Greco and Cristian Molinaro},
  publisher        = {Morgan \& Claypool},
  title            = {Datalog and Logic Databases},
  year             = {2015},
  isbn             = {9781627051149},
  doi              = {https://doi.org/10.2200/S00648ED1V01Y201505DTM041},
  file             = {:Logic/Datalog and Logic Databases.pdf:PDF},
  groups           = {Datalog},
  modificationdate = {2024-08-25T10:42:11},
}

@Book{Aho1972,
  author           = {Alfred V. Aho and Jeffrey D. Ullman},
  publisher        = {Prentice-Hall, Inc.},
  title            = {The Theory of Parsing, Translation, and Compiling},
  year             = {1972},
  address          = {USA},
  isbn             = {0139145567},
  abstract         = {From volume 1 Preface (See Front Matter for full Preface)This book is intended for a one or two semester course in compiling theory at the senior or graduate level. It is a theoretically oriented treatment of a practical subject. Our motivation for making it so is threefold.(1) In an area as rapidly changing as Computer Science, sound pedagogy demands that courses emphasize ideas, rather than implementation details. It is our hope that the algorithms and concepts presented in this book will survive the next generation of computers and programming languages, and that at least some of them will be applicable to fields other than compiler writing.(2) Compiler writing has progressed to the point where many portions of a compiler can be isolated and subjected to design optimization. It is important that appropriate mathematical tools be available to the person attempting this optimization.(3) Some of the most useful and most efficient compiler algorithms, e.g. LR(k) parsing, require a good deal of mathematical background for full understanding. We expect, therefore, that a good theoretical background will become essential for the compiler designer.While we have not omitted difficult theorems that are relevant to compiling, we have tried to make the book as readable as possible. Numerous examples are given, each based on a small grammar, rather than on the large grammars encountered in practice. It is hoped that these examples are sufficient to illustrate the basic ideas, even in cases where the theoretical developments are difficult to follow in isolation.

From volume 2 Preface (See Front Matter for full Preface)Compiler design is one of the first major areas of systems programming for which a strong theoretical foundation is becoming available. Volume I of The Theory of Parsing, Translation, and Compiling developed the relevant parts of mathematics and language theory for this foundation and developed the principal methods of fast syntactic analysis. Volume II is a continuation of Volume I, but except for Chapters 7 and 8 it is oriented towards the nonsyntactic aspects of compiler design.The treatment of the material in Volume II is much the same as in Volume I, although proofs have become a little more sketchy. We have tried to make the discussion as readable as possible by providing numerous examples, each illustrating one or two concepts.Since the text emphasizes concepts rather than language or machine details, a programming laboratory should accompany a course based on this book, so that a student can develop some facility in applying the concepts discussed to practical problems. The programming exercises appearing at the ends of sections can be used as recommended projects in such a laboratory. Part of the laboratory course should discuss the code to be generated for such programming language constructs as recursion, parameter passing, subroutine linkages, array references, loops, and so forth.},
  file             = {:Compiler/The Theory of Parsing, Translation, and Compiling -Volume 1 Parsing.pdf:PDF;:Compiler/The Theory of Parsing, Translation, and Compiling -Volume 2 Compiling.pdf:PDF},
  groups           = {Compiler},
  modificationdate = {2024-08-25T10:19:04},
}

@Book{Muschko2014,
  author           = {Benjamin Muschko},
  publisher        = {Manning Publications},
  title            = {Gradle in Action},
  year             = {2014},
  isbn             = {9781617291302},
  creationdate     = {2022-08-21T01:33:55},
  file             = {:Gradle in Action.pdf:PDF},
  groups           = {Tools},
  modificationdate = {2024-02-05T08:40:13},
  ranking          = {rank5},
}

@Book{Jemerov2017,
  author           = {Dmitry Jemerov and Svetlana Isakova},
  publisher        = {Manning Publications},
  title            = {Kotlin in Action},
  year             = {2017},
  isbn             = {9781617293290},
  creationdate     = {2022-08-21T01:36:03},
  file             = {:Kotlin in Action.pdf:PDF},
  groups           = {Kotlin},
  modificationdate = {2022-08-21T01:37:20},
}

@Book{CoxBuday2017,
  author           = {Katherine Cox-Buday},
  publisher        = {O’Reilly Media},
  title            = {Concurrency in Go},
  year             = {2017},
  creationdate     = {2022-09-17T22:32:33},
  file             = {:Go/Concurrency in Go, 2017.pdf:PDF},
  groups           = {Golang},
  modificationdate = {2024-08-25T08:48:05},
}

@Misc{HotSpotInternals,
  author           = {John Rose},
  howpublished     = {\url{https://wiki.openjdk.org/display/HotSpot}},
  month            = feb,
  title            = {HotSpot Internals},
  year             = {2019},
  comment          = {This wiki is owned by the HotSpot Group.  It is written for programmers working on the HotSpot JVM system. This includes programmers of systems which generate JVM bytecodes (i.e., language implementers).

- Presentations
https://wiki.openjdk.org/display/HotSpot/Presentations},
  creationdate     = {2022-10-31T10:49:52},
  file             = {:JVM/HotSpot VM Under the Hood, PPT, 2016.pdf:PDF},
  groups           = {JVM},
  modificationdate = {2024-08-25T09:03:09},
  url              = {https://wiki.openjdk.org/display/HotSpot},
}

@Book{Fang2015,
  author           = {方腾飞 and 魏鹏 and 程晓明},
  publisher        = {机械工业出版社},
  title            = {Java并发编程的艺术},
  year             = {2015},
  isbn             = {978-7-111-50824-3},
  creationdate     = {2022-11-12T14:06:21},
  file             = {:Java/Java并发编程的艺术.pdf:PDF},
  groups           = {Java},
  modificationdate = {2024-08-25T08:57:52},
}

@Book{Genesereth2020,
  author           = {Michael Genesereth and Vinay K. Chaudhri},
  publisher        = {Morgan \& Claypool},
  title            = {Introduction to Logic Programming},
  year             = {2020},
  isbn             = {9781681737225},
  creationdate     = {2022-11-17T08:28:56},
  groups           = {LogicProgramming},
  modificationdate = {2022-11-17T08:31:55},
  url              = {http://logicprogramming.stanford.edu/public/lessons.php},
}

@Misc{cglib,
  title            = {cglib},
  abstract         = {Byte Code Generation Library is high level API to generate and transform Java byte code. It is used by AOP, testing, data access frameworks to generate dynamic proxy objects and intercept field access.


IMPORTANT NOTE: cglib is unmaintained and does not work well (or possibly at all?) in newer JDKs, particularly JDK17+. If you need to support newer JDKs, we will accept well-tested well-thought-out patches... but you'll probably have better luck migrating to something like ByteBuddy.},
  creationdate     = {2022-11-20T22:23:35},
  groups           = {JVM},
  modificationdate = {2024-08-25T09:00:24},
  url              = {https://github.com/cglib/cglib},
}

@Misc{ByteBuddy,
  title            = {Byte Buddy},
  abstract         = {Byte Buddy is a code generation and manipulation library for creating and modifying Java classes during the runtime of a Java application and without the help of a compiler. Other than the code generation utilities that ship with the Java Class Library, Byte Buddy allows the creation of arbitrary classes and is not limited to implementing interfaces for the creation of runtime proxies. Furthermore, Byte Buddy offers a convenient API for changing classes either manually, using a Java agent or during a build.},
  creationdate     = {2022-11-20T22:24:18},
  groups           = {JVM},
  modificationdate = {2022-11-20T22:24:52},
  url              = {https://bytebuddy.net/#/},
}

@Misc{,
  author           = {sger},
  title            = {List of Elixir books},
  comment          = {- Programming Elixir 1.6
https://pragprog.com/titles/elixir16/programming-elixir-1-6/},
  creationdate     = {2022-11-26T11:06:50},
  groups           = {Elixir},
  modificationdate = {2022-11-26T11:09:44},
  url              = {https://github.com/sger/ElixirBooks},
}

@Book{Lea1999,
  author           = {Doug Lea},
  publisher        = {Addison Wesley},
  title            = {Concurrent Programming in Java™: Design Principles and Patterns},
  year             = {1999},
  edition          = {2},
  isbn             = {0-201-31009-0},
  creationdate     = {2023-02-19T17:01:14},
  file             = {:Java/Concurrent Programming in Java, 1999.pdf:PDF;:Java/Concurrent Programming in Java, PPT.pdf:PDF},
  groups           = {Java},
  modificationdate = {2024-08-25T08:55:56},
  url              = {https://gee.cs.oswego.edu/dl/cpj/index.html},
}

@Book{Gruber2022,
  author           = {Bastian Gruber},
  publisher        = {Manning},
  title            = {Rust Web Development},
  year             = {2022},
  isbn             = {9781617299001},
  comment          = {400 pages},
  creationdate     = {2023-06-24T11:35:22},
  file             = {:Rust/Rust Web Development, 2022.pdf:PDF},
  groups           = {Rust},
  modificationdate = {2024-08-25T10:06:04},
  ranking          = {rank5},
  url              = {https://www.manning.com/books/rust-web-development},
}

@Book{Syed2014,
  author           = {Basarat Ali Syed},
  publisher        = {Apress},
  title            = {Beginning Node.js},
  year             = {2014},
  isbn             = {978-1-4842-0188-6},
  comment          = {297 pages

Code: https://github.com/apress/beg-node.js},
  creationdate     = {2023-08-27T11:24:23},
  file             = {:JavaScript/Beginning Node.js, 2014.pdf:PDF},
  groups           = {NodeJS},
  modificationdate = {2024-08-25T09:55:12},
  ranking          = {rank5},
  readstatus       = {read},
}

@Book{Vincent2019,
  author           = {William S. Vincent},
  publisher        = {Lean Publishing},
  title            = {Django for Professionals},
  year             = {2019},
  creationdate     = {2023-08-27T11:44:20},
  file             = {:Python/Django for Professionals, 2019.pdf:PDF},
  groups           = {Python},
  modificationdate = {2024-08-25T09:17:26},
}

@Standard{ECMAScript,
  organization     = {Ecma Internationa},
  title            = {ECMAScript® 2015 Language Specification},
  url              = {https://www.ecma-international.org/publications-and-standards/standards/ecma-262/},
  year             = {2015},
  creationdate     = {2023-08-29T07:48:46},
  file             = {:JavaScript/ECMA-262_6th_edition_june_2015.pdf:PDF;:JavaScript/ECMA-262_14th_edition_june_2023.pdf:PDF},
  groups           = {JavaScript},
  modificationdate = {2024-08-25T09:53:41},
}

@Book{Frisbie2020,
  author           = {Matt Frisbie},
  publisher        = {Wiley},
  title            = {Professional Javascript® for Web Developers},
  year             = {2020},
  isbn             = {978-1-119-36644-7},
  creationdate     = {2023-08-30T07:50:39},
  file             = {:JavaScript/Professional JavaScript for Web Developers, 4th Edition, 2020.pdf:PDF;:JavaScript/JavaScript高级程序设计, 第4版, 2020.pdf:PDF},
  groups           = {JavaScript},
  modificationdate = {2024-08-25T09:54:33},
  ranking          = {rank5},
  readstatus       = {skimmed},
}

@Book{Cherny2019,
  author           = {Boris Cherny},
  publisher        = {O’Reilly Media},
  title            = {Programming TypeScript},
  year             = {2019},
  isbn             = {978-1-492-03765-1},
  creationdate     = {2023-09-02T13:42:23},
  file             = {:JavaScript/Programming TypeScript, 2019.pdf:PDF},
  groups           = {TypeScript},
  modificationdate = {2024-08-25T09:56:38},
  readstatus       = {read},
}

@Book{Hunter2020,
  author           = {Thomas Hunter II},
  publisher        = {O’Reilly Media},
  title            = {Distributed Systems with Node.js},
  year             = {2020},
  isbn             = {978-1-492-07729-9},
  comment          = {390 pages},
  creationdate     = {2023-09-13T21:54:49},
  file             = {:JavaScript/Distributed Systems with Node.js, 2020.pdf:PDF},
  groups           = {NodeJS},
  modificationdate = {2024-08-25T09:55:21},
  ranking          = {rank5},
}

@Book{Roestenburg2017,
  author           = {Raymond Roestenburg and Rob Bakker and Rob Williams},
  publisher        = {Manning Publications},
  title            = {Akka in Action},
  year             = {2017},
  isbn             = {9781617291012},
  comment          = {- Akka in Action, Second Edition
https://www.manning.com/books/akka-in-action-second-edition

Akka version: 2.4.9},
  creationdate     = {2023-09-16T16:44:48},
  file             = {:Scala/Akka in Action, 2016.pdf:PDF},
  groups           = {Scala},
  keywords         = {Akka},
  modificationdate = {2024-08-25T09:27:24},
}

@Book{Nash2017,
  author           = {Michael Nash and Wade Waldron},
  editor           = {Nan Barber and Brian Foster},
  publisher        = {O’Reilly Media},
  title            = {Applied Akka Patterns: A Hands-On Guide to Designing Distributed Applications},
  year             = {2017},
  creationdate     = {2023-09-16T16:46:54},
  file             = {:Scala/Applied Akka Patterns.pdf:PDF},
  groups           = {Scala},
  keywords         = {Akka},
  modificationdate = {2024-08-25T09:27:33},
}

@Book{Goodwin2015,
  author           = {Jason Goodwin},
  publisher        = {Packt Publishing},
  title            = {Learning Akka},
  year             = {2015},
  comment          = {Akka version: 2.3.6},
  creationdate     = {2023-09-16T16:48:47},
  file             = {:Scala/Learning Akka, 2015.pdf:PDF},
  groups           = {Scala},
  keywords         = {Akka},
  modificationdate = {2024-08-25T09:28:00},
}

@Book{Vernon2016,
  author           = {Vaughn Vernon},
  publisher        = {Pearson Education},
  title            = {Reactive Messaging Patterns with the Actor Model},
  year             = {2016},
  isbn             = {978-0-13-384683-6},
  comment          = {- Carl Hewitt
https://en.wikipedia.org/wiki/Carl_Hewitt

- Actor Model of Computation: Scalable Robust Information Systems
https://arxiv.org/abs/1008.1459

- Actor model
https://en.wikipedia.org/wiki/Actor_model},
  creationdate     = {2023-09-16T16:50:43},
  file             = {:Scala/Reactive Messaging Patterns with the Actor Model, 2016.pdf:PDF;:Scala/Actor Model of Computation- Scalable Robust Information Systems.pdf:PDF;:Scala/Actors- A Model of Concurrent Computation in Distributed Systems, 1985.pdf:PDF},
  groups           = {Scala},
  keywords         = {Akka, Actor},
  modificationdate = {2024-08-25T09:30:19},
}

@Book{Ramalho2022,
  author           = {Luciano Ramalho},
  publisher        = {O’Reilly Media},
  title            = {Fluent Python},
  year             = {2022},
  edition          = {2},
  isbn             = {978-1-492-05635-5},
  comment          = {Convers Python 3.10.

1011 pages.},
  creationdate     = {2023-10-16T08:18:24},
  file             = {:Python/Fluent Python, 2nd Edition, 2022.pdf:PDF},
  groups           = {Python},
  modificationdate = {2024-08-25T09:17:41},
  ranking          = {rank5},
  subtitle         = {Clear, Concise, and Effective Programming},
  url              = {https://www.fluentpython.com/},
}

@Book{Martelli2023,
  author           = {Alex Martelli and Anna Martelli Ravenscroft and Steve Holden and Paul McGuire},
  publisher        = {O'Reilly Media},
  title            = {Python in a Nutshell},
  year             = {2023},
  edition          = {4},
  isbn             = {9781098113551},
  comment          = {735 pages

covering 3.7 through 3.11},
  creationdate     = {2023-10-16T08:20:16},
  file             = {:Python/Python in a Nutshell, 4th Edition, 2023.pdf:PDF},
  groups           = {Python},
  modificationdate = {2024-08-25T09:19:18},
  ranking          = {rank5},
  subtitle         = {A Desktop Quick Reference},
  url              = {https://www.oreilly.com/library/view/python-in-a/9781098113544},
}

@Book{Bodner2021,
  author           = {Jon Bodner},
  publisher        = {O’Reilly Media},
  title            = {Learning Go},
  year             = {2021},
  edition          = {1},
  isbn             = {978-1-492-07721-3},
  comment          = {375 pages

Learning Go, 2nd Edition and upcoming language changes
https://groups.google.com/g/golang-dev/c/cCOQ3ATDISM},
  creationdate     = {2023-11-08T22:12:19},
  file             = {:Go/Learning Go, 2021.pdf:PDF;:Go/Learning Go, 2nd Edition, 2024.pdf:PDF},
  groups           = {Golang},
  modificationdate = {2024-08-25T08:49:16},
  ranking          = {rank5},
  url              = {https://www.oreilly.com/library/view/learning-go-2nd/9781098139285/},
}

@Book{Ball2019,
  author           = {Thorsten Ball},
  title            = {Writing A Compiler In Go},
  year             = {2019},
  creationdate     = {2023-11-18T23:53:09},
  file             = {:Go/Writing A Compiler In Go, 2019.pdf:PDF},
  groups           = {Golang},
  modificationdate = {2024-08-25T08:49:59},
  ranking          = {rank5},
  url              = {https://compilerbook.com/},
}

@Book{Ball2017,
  author           = {Thorsten Ball},
  title            = {Writing An Interpreter In Go},
  year             = {2017},
  creationdate     = {2023-11-18T23:54:06},
  file             = {:Go/Writing An Interpreter In Go, 2017.pdf:PDF},
  groups           = {Golang},
  modificationdate = {2024-08-25T08:50:07},
  ranking          = {rank5},
  url              = {https://compilerbook.com/},
}

@Book{Bos2023,
  author           = {Mara Bos},
  publisher        = {O’Reilly Media},
  title            = {Rust Atomics and Locks},
  year             = {2023},
  isbn             = {978-1-098-11944-7},
  abstract         = {The Rust programming language is extremely well suited for concurrency, and its ecosystem has many libraries that include lots of concurrent data structures, locks, and more. But implementing those structures correctly can be very difficult. Even in the most well-used libraries, memory ordering bugs are not uncommon.

In this practical book, Mara Bos, leader of the Rust library team, helps Rust programmers of all levels gain a clear understanding of low-level concurrency. You'll learn everything about atomics and memory ordering and how they're combined with basic operating system APIs to build common primitives like mutexes and condition variables. Once you're done, you'll have a firm grasp of how Rust's memory model, the processor, and the role of the operating system all fit together.

With this guide, you'll learn:

- How Rust's type system works exceptionally well for programming concurrency correctly
- All about mutexes, condition variables, atomics, and memory ordering
- What happens in practice with atomic operations on Intel and ARM processors
- How locks are implemented with support from the operating system
- How to write correct code that includes concurrency, atomics, and locks
- How to build your own locking and synchronization primitives correctly},
  comment          = {249 pages},
  creationdate     = {2023-11-26T14:44:40},
  file             = {:Rust/Rust Atomics and Locks, 2023.pdf:PDF},
  groups           = {Rust},
  modificationdate = {2024-08-25T10:05:50},
  url              = {https://www.oreilly.com/library/view/rust-atomics-and/9781098119430/},
}

@Book{Eshwarla2023,
  author           = {Prabhu Eshwarla},
  publisher        = {Manning},
  title            = {Rust Servers, Services, and Apps},
  year             = {2023},
  isbn             = {9781617298608},
  comment          = {328 pages},
  creationdate     = {2023-12-02T09:50:44},
  file             = {:Rust/Rust Servers Services, and Apps, 2023.pdf:PDF},
  groups           = {Rust},
  modificationdate = {2024-08-25T10:05:57},
  ranking          = {rank5},
  url              = {https://www.manning.com/books/rust-servers-services-and-apps},
}

@Book{Gallant2019,
  author           = {Gerard Gallant},
  publisher        = {Manning},
  title            = {WebAssembly in Action},
  year             = {2019},
  isbn             = {9781617295744},
  creationdate     = {2023-12-02T23:01:49},
  file             = {:JavaScript/WebAssembly in Action, 2019.pdf:PDF},
  groups           = {WebAssembly},
  modificationdate = {2024-08-25T09:57:44},
}

@Book{Mena2019,
  author           = {Alejandro Serrano Mena},
  publisher        = {Apress},
  title            = {Practical Haskell: A Real World Guide to Programming},
  year             = {2019},
  edition          = {2},
  isbn             = {978-1-4842-4479-1},
  creationdate     = {2023-12-02T23:10:47},
  file             = {:Haskell/Practical Haskell, 2nd edition, 2019.pdf:PDF},
  groups           = {Haskell},
  modificationdate = {2024-08-25T09:38:19},
  ranking          = {rank5},
}

@Book{Allen2019,
  author           = {Christopher Allen and Julie Moronuki},
  title            = {Haskell Programming},
  year             = {2019},
  creationdate     = {2023-12-02T23:19:21},
  file             = {:Haskell/Haskell Programming.pdf:PDF},
  groups           = {Haskell},
  modificationdate = {2024-08-25T09:37:53},
  ranking          = {rank5},
  url              = {https://haskellbook.com/},
}

@Book{Domkin2021,
  author           = {Vsevolod Domkin},
  publisher        = {Apress},
  title            = {Programming Algorithms in Lisp},
  year             = {2021},
  isbn             = {978-1-4842-6427-0},
  creationdate     = {2023-12-02T23:23:42},
  file             = {:Lisp/Programming Algorithms in Lisp, 2021.pdf:PDF},
  groups           = {Common Lisp},
  modificationdate = {2024-08-25T08:39:57},
  ranking          = {rank5},
}

@Book{Luger2008,
  author           = {George Luger and William Stubblefield},
  publisher        = {Pearson},
  title            = {AI Algorithms, Data Structures, and Idioms in Prolog, Lisp, and Java},
  year             = {2008},
  edition          = {6},
  isbn             = {978-0136070474},
  creationdate     = {2023-12-02T23:25:11},
  file             = {:Lisp/AI Algorithms, Data Structures, and Idioms in Prolog, Lisp, and Java, 2009.pdf:PDF},
  groups           = {Lisp},
  modificationdate = {2024-08-25T08:35:58},
  ranking          = {rank4},
  url              = {https://www.cse.sc.edu/~mgv/csce580sp15/Luger_0136070477_1.pdf},
}

@Book{Petersen2022,
  author           = {Mickey Petersen},
  title            = {Mastering Emacs},
  year             = {2022},
  comment          = {314 pages},
  creationdate     = {2023-12-02T23:30:53},
  file             = {:Lisp/Emacs/Mastering Emacs, 2022.pdf:PDF},
  groups           = {Lisp},
  modificationdate = {2024-09-07T20:36:28},
  ranking          = {rank4},
  url              = {https://www.masteringemacs.org/},
}

@Book{Calcote2020,
  author           = {John Calcote},
  publisher        = {No Starch Press},
  title            = {Autotools: A Practioner's Guide to GNU Autoconf, Automake, and Libtool},
  year             = {2020},
  edition          = {2},
  isbn             = {978-1-59327-972-1},
  creationdate     = {2023-12-02T23:49:05},
  file             = {:C/Autotools, 2nd edition, 2019.pdf:PDF},
  groups           = {SystemProgramming},
  modificationdate = {2024-08-25T10:06:20},
  ranking          = {rank5},
}

@Book{Mecklenburg2004,
  author           = {Robert Mecklenburg},
  publisher        = {O’Reilly Media},
  title            = {Managing Projects with GNU Make},
  year             = {2004},
  edition          = {3},
  isbn             = {978-0-596-00610-5},
  comment          = {Professional CMake: A Practical Guide
https://crascit.com/professional-cmake/

An Introduction to Modern CMake
https://cliutils.gitlab.io/modern-cmake/},
  creationdate     = {2023-12-02T23:52:59},
  file             = {:C/Managing Projects with GNU Make, 3rd edition, 2004.pdf:PDF},
  groups           = {SystemProgramming},
  modificationdate = {2024-08-25T10:06:32},
  ranking          = {rank5},
  url              = {https://cmake.org/cmake/help/book/mastering-cmake/index.html},
}

@Book{MasteringCMake,
  title            = {Mastering CMake},
  creationdate     = {2023-12-02T23:56:24},
  file             = {:C/Mastering CMake.pdf:PDF},
  groups           = {SystemProgramming},
  modificationdate = {2024-08-25T10:06:41},
  ranking          = {rank5},
}

@Misc{,
  howpublished     = {\url{https://doc.scrapy.org/en/latest/index.html}},
  note             = {(Accessed on 10/24/2018)},
  title            = {Scrapy},
  creationdate     = {2023-12-03T11:28:48},
  groups           = {Python},
  modificationdate = {2023-12-03T11:28:48},
}

@Misc{,
  howpublished     = {\url{http://www.sphinx-doc.org/en/master/index.html}},
  note             = {(Accessed on 10/24/2018)},
  title            = {Sphinx},
  comment          = {Sphinx is a tool that makes it easy to create intelligent and beautiful documentation, written by Georg Brandl and licensed under the BSD license.

Sphinx uses reStructuredText as its markup language, and many of its strengths come from the power and straightforwardness of reStructuredText and its parsing and translating suite, the Docutils.},
  creationdate     = {2023-12-03T11:28:48},
  groups           = {Python},
  modificationdate = {2023-12-03T11:28:48},
}

@Misc{,
  howpublished     = {\url{http://www.doxygen.org/}},
  note             = {(Accessed on 10/24/2018)},
  title            = {Doxygen},
  comment          = {Generate documentation from source code
Doxygen is the de facto standard tool for generating documentation from annotated C++ sources, but it also supports other popular programming languages such as C, Objective-C, C#, PHP, Java, Python, IDL (Corba, Microsoft, and UNO/OpenOffice flavors), Fortran, VHDL, Tcl, and to some extent D.},
  creationdate     = {2023-12-03T11:29:57},
  groups           = {C++},
  modificationdate = {2023-12-03T11:29:57},
}

@Misc{CommonLispCookbook,
  month            = dec,
  note             = {[Online; accessed 24. Dec. 2023]},
  title            = {The Common Lisp Cookbook},
  year             = {2023},
  file             = {:Lisp/common-lisp-cookbook.pdf:PDF},
  groups           = {Common Lisp},
  modificationdate = {2024-11-26T07:01:52},
  ranking          = {rank5},
  url              = {https://lispcookbook.github.io/cl-cookbook},
}

@Misc{norvig2023Dec,
  author           = {norvig},
  month            = dec,
  note             = {[Online; accessed 24. Dec. 2023]},
  title            = {Paradigms of Artificial Intelligence Programming},
  year             = {2023},
  groups           = {Common Lisp},
  journal          = {GitHub},
  modificationdate = {2023-12-29T00:30:41},
  ranking          = {rank5},
  url              = {https://github.com/norvig/paip-lisp},
}

@Manual{SBCLUserManual,
  title            = {SBCL User Manual},
  comment          = {167 pages},
  creationdate     = {2023-12-26T21:53:48},
  file             = {:Lisp/sbcl-2.4.7.pdf:PDF},
  groups           = {Common Lisp},
  modificationdate = {2024-08-25T08:40:06},
  url              = {https://www.sbcl.org/manual/index.html},
}

@Book{Graham1993,
  author           = {Paul Graham},
  publisher        = {Prentice Hall},
  title            = {On Lisp},
  year             = {1993},
  isbn             = {0130305529},
  abstract         = {On Lisp is a comprehensive study of advanced Lisp techniques, with bottom-up programming as the unifying theme. It gives the first complete description of macros and macro applications. The book also covers important subjects related to bottom-up programming, including functional programming, rapid prototyping, interactive development, and embedded languages. The final chapter takes a deeper look at object-oriented programming than previous Lisp books, showing the step-by-step construction of a working model of the Common Lisp Object System (CLOS).

As well as an indispensable reference, On Lisp is a source of software. Its examples form a library of functions and macros that readers will be able to use in their own Lisp programs.},
  comment          = {426 pages

Lisp links: books
https://www.paulgraham.com/booklinks.html},
  creationdate     = {2023-12-29T00:24:07},
  file             = {:Lisp/On Lisp, 1993.pdf:PDF},
  groups           = {Common Lisp},
  modificationdate = {2024-08-25T08:39:33},
  ranking          = {rank5},
  url              = {https://www.paulgraham.com/onlisp.html},
}

@Book{Nacke2021,
  author           = {Kai Nacke},
  publisher        = {Packt},
  title            = {Learn LLVM 12},
  year             = {2021},
  isbn             = {9781839213502},
  comment          = {392 pages

Learn LLVM 17 - Second Edition, 2024, 416 pages
https://www.oreilly.com/library/view/learn-llvm-17/9781837631346},
  creationdate     = {2024-02-05T08:07:13},
  file             = {:Compiler/Learn LLVM 12.pdf:PDF},
  groups           = {LLVM},
  modificationdate = {2024-08-25T10:19:48},
  ranking          = {rank5},
  url              = {https://www.packtpub.com/product/learn-llvm-12/9781839213502},
}

@Manual{ModernCMake,
  title            = {Modern CMake},
  creationdate     = {2024-02-05T08:43:06},
  file             = {:C/modern-cmake.pdf:PDF},
  groups           = {SystemProgramming},
  modificationdate = {2024-08-25T10:06:53},
  url              = {https://cliutils.gitlab.io/modern-cmake},
}

@Book{Gregoire2021,
  author           = {Marc Gregoire},
  publisher        = {Wiley},
  title            = {Professional C++},
  year             = {2021},
  edition          = {5},
  isbn             = {978-1-119-69545-5},
  comment          = {1312 pages},
  creationdate     = {2024-02-05T09:19:20},
  file             = {:C/Professional C++, 5th Edition.pdf:PDF},
  groups           = {C++},
  modificationdate = {2024-08-25T10:11:49},
  ranking          = {rank5},
  url              = {https://www.wiley.com/en-us/Professional+C++,+5th+Edition-p-9781119695400},
}

@Book{Bancila2020,
  author           = {Marius Bancila},
  publisher        = {Packt},
  title            = {Modern C++ Programming Cookbook},
  year             = {2020},
  edition          = {2},
  isbn             = {978-1-80020-898-8},
  creationdate     = {2024-02-05T09:22:11},
  file             = {:C/Modern C++ Programming Cookbook, 2nd Edition, 2020.pdf:PDF},
  groups           = {C++},
  modificationdate = {2024-08-25T10:11:36},
  ranking          = {rank5},
  url              = {https://www.packtpub.com/product/modern-c-programming-cookbook-second-edition/9781800208988},
}

@Book{Stephens2005,
  author           = {D. Ryan Stephens and Christopher Diggins and Jonathan Turkanis and Jeff Cogswell},
  publisher        = {O’Reilly},
  title            = {C++ Cookbook},
  year             = {2005},
  isbn             = {978-0-596-00761-4},
  creationdate     = {2024-02-05T09:24:15},
  file             = {:C/C++ Cookbook, 2005.pdf:PDF},
  groups           = {C++},
  modificationdate = {2024-08-25T10:10:56},
  ranking          = {rank5},
  url              = {https://www.oreilly.com/library/view/c-cookbook/0596007612/},
}

@Book{Skinner2023,
  author           = {Rebecca Skinner},
  publisher        = {The Pragmatic Programmers},
  title            = {Effective Haskell},
  year             = {2023},
  isbn             = {978-1-68050-934-2},
  abstract         = {Rather than teach you how to translate your programs from other languages, in this book you’ll develop an intuition for how to think about programs in Haskell from the ground up. This will make it easier for you to read other developers’ code, make you more effective at writing code, and help you with troubleshooting.

Most of the chapters in this book build on concepts from previous chapters, and no content in any chapter relies on concepts that have not yet been introduced. You’ll never be forced to use something that hasn’t yet been fully explained. In the last half of this book, once you have worked through the fundamental materials, you may be able to approach some material out of order if there are particular areas that you are interested in.

663 pages},
  comment          = {- Example driven descrition, but not focus on the definition.
- Cabal project demonstration.
- Lots of language extensions, why?},
  file             = {:Haskell/Effective Haskell, 2023.pdf:PDF},
  groups           = {Haskell},
  modificationdate = {2024-08-25T09:37:19},
  url              = {https://www.pragprog.com/titles/rshaskell/effective-haskell/},
}

@Book{Bragilevsky2021,
  author           = {Vitaly Bragilevsky},
  publisher        = {Manning},
  title            = {Haskell in Depth},
  year             = {2021},
  isbn             = {9781617295409},
  abstract         = {When talking about any programming language in general and its use in industry, we usually discuss the following components:
■ Language features, programming style, and how they affect one another
■ The set of libraries (packages) available to developers and their distribution
■ The tooling that forms a convenient programming environment

665 pages},
  file             = {:Haskell/Haskell in Depth, 2021.pdf:PDF},
  groups           = {Haskell},
  modificationdate = {2024-08-25T09:37:45},
  url              = {https://www.manning.com/books/haskell-in-depth},
}

@Book{Kurt2018,
  author           = {Will Kurt},
  publisher        = {Manning},
  title            = {Get Programming with Haskell},
  year             = {2018},
  isbn             = {9781617293764},
  abstract         = {Get Programming with Haskell introduces you to the Haskell language without drowning you in academic jargon and heavy functional programming theory. By working through 42 easy-to-follow lessons, you'll learn Haskell the best possible way—by doing Haskell!

l. I’ve always wanted to read a book that shows you how to solve practical problems that are often a real pain in Haskell. 
I don’t particularly care to see large, industrial-strength programs, but rather fun experiments that let you explore the world with this impressive programming language.
I’ve also always wanted to read a Haskell book that’s reasonably short and that, when I’m finished, enables me to feel comfortable doing all sorts of fun weekend projects in Haskell},
  creationdate     = {2024-03-05T21:42:03},
  file             = {:Haskell/Get Programming with Haskell, 2018.pdf:PDF},
  groups           = {Haskell},
  modificationdate = {2024-08-25T09:37:27},
  ranking          = {rank5},
  url              = {https://www.manning.com/books/get-programming-with-haskell},
}

@Book{Hutton2016,
  author           = {Graham Hutton},
  publisher        = {Cambridge University Press},
  title            = {Programming in Haskell},
  year             = {2016},
  edition          = {2},
  isbn             = {9781316626221},
  abstract         = {This book is based on the author’s experience of
teaching Haskell for more than 20 years.

320 pages},
  creationdate     = {2024-03-05T22:14:05},
  file             = {:Haskell/Programming in Haskell, 2nd edition, 2016.pdf:PDF},
  groups           = {Haskell},
  modificationdate = {2024-08-25T09:38:35},
  url              = {https://www.cambridge.org/highereducation/books/programming-in-haskell/8FED82E807EF12D390DE0D16FDE217E4#overview},
}

@Book{Thomas2018,
  author           = {Mark Tielens Thomas},
  publisher        = {Manning},
  title            = {React in Action},
  year             = {2018},
  isbn             = {9781617293856},
  abstract         = {360 pages},
  file             = {:JavaScript/React in Action, 2018.pdf:PDF},
  groups           = {React},
  modificationdate = {2024-08-25T09:56:11},
  ranking          = {rank5},
  url              = {https://www.manning.com/books/react-in-action},
}

@Book{Dabit2019,
  author           = {Nader Dabit},
  publisher        = {Manning},
  title            = {React Native in Action: Developing iOS and Android apps with JavaScript},
  year             = {2019},
  isbn             = {9781617294051},
  abstract         = {320 pages},
  file             = {:JavaScript/React Native in Action, 2019.pdf:PDF},
  groups           = {React},
  modificationdate = {2024-08-25T09:56:21},
  url              = {https://www.manning.com/books/react-native-in-action},
}

@Book{Griffiths2021,
  author           = {David Griffiths and Dawn Griffiths},
  publisher        = {O’Reilly Media},
  title            = {React Cookbook: Recipes for Mastering the React Framework},
  year             = {2021},
  isbn             = {978-1-492-08584-3},
  comment          = {513 pages},
  file             = {:JavaScript/React Cookbook, 2021.pdf:PDF},
  groups           = {React},
  modificationdate = {2024-08-25T09:56:02},
  url              = {https://www.oreilly.com/library/view/react-cookbook/9781492085836/},
}

@Book{Hanchett2018,
  author           = {Erik Hanchett and Benjamin Listwon},
  publisher        = {Manning},
  title            = {Vue.js in Action},
  year             = {2018},
  isbn             = {9781617294624},
  comment          = {Vue-CLI 2.9.2},
  file             = {:JavaScript/Vue.js in Action, 2018.pdf:PDF},
  groups           = {Vue},
  modificationdate = {2024-08-25T09:57:35},
  ranking          = {rank5},
  url              = {https://www.manning.com/books/vue-js-in-action},
}

@Book{Mikowski2014,
  author           = {Michael S. Mikowski and Josh C. Powell},
  publisher        = {Manning},
  title            = {Single Page Web Applications: JavaScript end-to-end},
  year             = {2014},
  isbn             = {9781617290756},
  abstract         = {In Single Page Web Applications you'll learn to build modern browser-based apps that take advantage of stronger client platforms and more predictable bandwidth. You'll learn the SPA design approach, and then start exploring new techniques like structured JavaScript and responsive design. And you'll learn how to capitalize on trends like server-side JavaScript and NoSQL data stores, as well as new frameworks that make JavaScript more manageable and testable as a first-class language.},
  comment          = {432 pages},
  file             = {:JavaScript/Single Page Web Applications, 2014.pdf:PDF},
  groups           = {JavaScript},
  modificationdate = {2024-08-25T09:54:44},
  ranking          = {rank5},
  url              = {https://www.manning.com/books/single-page-web-applications},
}

@Book{Djirdeh2018,
  author           = {Hassan Djirdeh and Nate Murray and Ari Lerner},
  publisher        = {Fullstack.io},
  title            = {Fullstack Vue: The Complete Guide to Vue.js and Friends},
  year             = {2018},
  file             = {:JavaScript/Fullstack Vue 3 The Complete Guide to Vue.js and Friends, 2018.pdf:PDF},
  groups           = {Vue},
  modificationdate = {2024-08-25T09:57:00},
  url              = {https://www.newline.co/vue},
}

@Book{Lopez2020,
  author           = {Daniel Andres Pelaez Lopez},
  publisher        = {Apress},
  title            = {Full-Stack Web Development with Jakarta EE and Vue.js},
  year             = {2020},
  isbn             = {9781484263426},
  file             = {:JavaScript/Full-Stack Web Development with Jakarta EE and Vue.js, 2020.epub:ePUB},
  groups           = {Vue},
  modificationdate = {2024-08-25T09:57:27},
  url              = {https://www.oreilly.com/library/view/full-stack-web-development/9781484263426/},
}

@Book{Fowler2022,
  author           = {Matthew Fowler},
  publisher        = {Manning},
  title            = {Python Concurrency with asyncio},
  year             = {2022},
  isbn             = {9781617298660},
  creationdate     = {2024-03-23T21:12:30},
  file             = {:Python/Python Concurrency with asyncio, 2022.pdf:PDF},
  groups           = {Python},
  modificationdate = {2024-11-09T08:58:46},
  ranking          = {rank5},
  url              = {https://www.manning.com/books/python-concurrency-with-asyncio},
}

@Book{Plotka2022,
  author           = {Bartlomiej Plotka},
  publisher        = {O'Reilly Media},
  title            = {Efficient Go},
  year             = {2022},
  isbn             = {9781098105716},
  comment          = {499 pages

Code: https://github.com/efficientgo},
  file             = {:Go/Efficient Go, 2022.epub:ePUB},
  groups           = {Golang},
  modificationdate = {2024-08-25T08:48:14},
  url              = {https://www.oreilly.com/library/view/efficient-go/9781098105709/},
}

@Book{Brady2017,
  author           = {Edwin Brady},
  publisher        = {Manning},
  title            = {Type-Driven Development with Idris},
  year             = {2017},
  isbn             = {9781617293023},
  comment          = {480 pages},
  creationdate     = {2024-04-04T10:02:12},
  file             = {:Haskell/Type-Driven Development with Idris, 2017.pdf:PDF},
  groups           = {Haskell},
  modificationdate = {2024-08-25T09:39:05},
  ranking          = {rank5},
  url              = {https://www.manning.com/books/type-driven-development-with-idris},
}

@Book{Riscutia2019,
  author           = {Vlad Riscutia},
  publisher        = {Manning},
  title            = {Programming with Types: Examples in TypeScript},
  year             = {2019},
  isbn             = {9781617296413},
  comment          = {336 pages},
  creationdate     = {2024-04-04T10:10:04},
  file             = {:JavaScript/Programming with Types, 2019.pdf:PDF},
  groups           = {TypeScript},
  modificationdate = {2024-08-25T09:56:49},
  url              = {https://www.manning.com/books/programming-with-types},
}

@Book{Maguire2018,
  author           = {Sandy Maguire},
  title            = {Thinking with Types: Type-Level Programming in Haskell},
  year             = {2018},
  creationdate     = {2024-04-04T19:26:39},
  file             = {:Haskell/Thinking with Types, 2018.pdf:PDF},
  groups           = {Haskell},
  modificationdate = {2024-08-25T09:38:58},
  url              = {https://thinkingwithtypes.com/},
}

@Book{Vanbrabant2008,
  author           = {Robbie Vanbrabant},
  publisher        = {Apress},
  title            = {Google Guice: Agile Lightweight Dependency Injection Framework},
  year             = {2008},
  isbn             = {9781590599976},
  comment          = {189 pages

version: 1.0 (Chapter 2 Getting Guice)},
  file             = {:Java/Google Guice- Agile Lightweight Dependency Injection Framework, 2008.pdf:PDF},
  groups           = {Java},
  modificationdate = {2024-08-25T08:56:06},
  url              = {https://www.oreilly.com/library/view/google-guice-agile/9781590599976},
}

@Book{Putrady2018,
  author           = {Ecky Putrady},
  publisher        = {Apress},
  title            = {Practical Web Development with Haskell},
  year             = {2018},
  isbn             = {978-1-4842-3738-0},
  comment          = {291 pages

Code: https://github.com/Apress/practical-webdev-haskell},
  creationdate     = {2024-04-14T00:23:18},
  file             = {:Haskell/Practical Web Development with Haskell.pdf:PDF},
  groups           = {Haskell},
  modificationdate = {2024-08-25T09:38:27},
  ranking          = {rank4},
  url              = {https://link.springer.com/book/10.1007/978-1-4842-3739-7},
}

@Book{Kinney2018,
  author           = {Steve Kinney},
  publisher        = {Manning},
  title            = {Electron in Action},
  year             = {2018},
  isbn             = {9781617294143},
  comment          = {376 pages},
  file             = {:JavaScript/Electron in Action, 2018.pdf:PDF},
  groups           = {Electron},
  modificationdate = {2024-08-25T09:55:01},
  ranking          = {rank5},
  url              = {https://www.manning.com/books/electron-in-action},
}

@Book{Brown2019,
  author           = {Ethan Brown},
  publisher        = {O'Reilly Media},
  title            = {Web Development with Node and Express},
  year             = {2019},
  edition          = {2},
  isbn             = {9781492053514},
  abstract         = {Build dynamic web applications with Express, a key component of the Node/JavaScript development stack. In this updated edition, author Ethan Brown teaches you Express fundamentals by walking you through the development of an example application. This hands-on guide covers everything from server-side rendering to API development suitable for usein single-page apps (SPAs).

Express strikes a balance between a robust framework and no framework at all, allowing you a free hand in your architecture choices. Frontend and backend engineers familiar with JavaScript will also learn best practices for building multipage and hybrid web apps with Express. Pick up this book anddiscover new ways to look at web development.

- Create a templating system for rendering dynamic data
- Dive into request and response objects, middleware, and URL routing
- Simulate a production environment for testing
- Persist data in document databases with MongoDB and relational databases with PostgreSQL
- Make your resources available to other programs with APIs
- Build secure apps with authentication, authorization, and HTTPS
- Integrate with social media, geolocation, and more
- Implement a plan for launching and maintaining your app
- Learn critical debugging skills},
  comment          = {343 pages},
  creationdate     = {2024-04-29T07:15:01},
  file             = {:JavaScript/Web Development with Node and Express, 2nd Edition, 2020.pdf:PDF},
  groups           = {NodeJS},
  modificationdate = {2024-08-25T09:55:31},
  url              = {https://www.oreilly.com/library/view/web-development-with/9781492053507},
}

@Book{Banks2020,
  author           = {Alex Banks and Eve Porcello},
  publisher        = {O'Reilly Media},
  title            = {Learning React: Modern Patterns for Developing React Apps},
  year             = {2020},
  isbn             = {9781492051725},
  abstract         = {If you want to learn how to build efficient React applications, this is your book. Ideal for web developers and software engineers who understand how JavaScript, CSS, and HTML work in the browser, this updated edition provides best practices and patterns for writing modern React code. No prior knowledge of React or functional JavaScript is necessary.

With their learning road map, authors Alex Banks and Eve Porcello show you how to create UIs that can deftly display changes without page reloads on large-scale, data-driven websites. You’ll also discover how to work with functional programming and the latest ECMAScript features. Once you learn how to build React components with this hands-on guide, you’ll understand just how useful React can be in your organization.

Understand key functional programming concepts with JavaScriptLook under the hood to learn how React runs in the browserCreate application presentation layers with React componentsManage data and reduce the time you spend debugging applicationsIncorporate React Hooks to manage state and fetch dataUse a routing solution for single-page application featuresLearn how to structure React applications with servers in mind},
  comment          = {310 pages},
  file             = {:JavaScript/Learning React- Modern Patterns for Developing React Apps, 2nd edition, 2020.pdf:PDF},
  groups           = {React},
  modificationdate = {2024-08-25T09:55:52},
  url              = {https://www.oreilly.com/library/view/learning-react-2nd/9781492051718/},
}

@Book{Wieruch2021,
  author           = {Robin Wieruch},
  publisher        = {Leanpub},
  title            = {The Road to React: Your journey to master React in JavaScript},
  year             = {2021},
  comment          = {253 pages

Code: https://github.com/the-road-to-learn-react},
  file             = {:JavaScript/The Road to React, 2021.pdf:PDF},
  groups           = {React},
  modificationdate = {2024-08-25T09:56:30},
  url              = {http://leanpub.com/the-road-to-learn-react},
}

@Book{Accomazzo2020,
  author           = {Anthony Accomazzo and Nate Murray and Ari Lerner and ClayAllsopp and David Guttman and Tyler McGinnis},
  publisher        = {Fullstack.io},
  title            = {Fullstack React: The Complete Guide to ReactJS and Friends},
  year             = {2020},
  comment          = {1030 pages

Code: https://github.com/johannlilly/book-fullstack-react},
  file             = {:JavaScript/Fullstack React, 2021.pdf:PDF},
  groups           = {React},
  modificationdate = {2024-08-25T09:55:44},
  url              = {https://www.newline.co/fullstack-react/},
}

@Book{Ceri1990,
  author           = {Stefano Ceri, Georg Gottlob, Letizia Tanca},
  publisher        = {Springer-Verlag Berlin Heidelberg},
  title            = {Logic Programming and Databases},
  year             = {1990},
  isbn             = {978-3-642-83954-2},
  doi              = {10.1007/978-3-642-83952-8},
  file             = {:Logic/Logic Programming and Databases.pdf:PDF},
  groups           = {Logic, LogicProgramming},
  modificationdate = {2024-08-25T10:41:53},
}

@Misc{Fern,
  author           = {Alan Fern},
  title            = {CS532 : Advanced Artificial Intelligence},
  file             = {:Logic/CS532 Lecture Notes- First-Order Logic- Syntax and Semantics.pdf:PDF},
  groups           = {Logic, LogicProgramming},
  modificationdate = {2024-08-25T10:41:36},
}

@Manual{Oetiker2023,
  title            = {The Not So Short Introduction to LaTeX},
  year             = {2023},
  comment          = {298 pages},
  file             = {:Latex/The Not So Short Introduction to LATEX.pdf:PDF},
  groups           = {Latex},
  modificationdate = {2024-08-25T10:27:38},
  subtitle         = {LATEX in 280 minutes},
  url              = {https://tobi.oetiker.ch/lshort/lshort.pdf},
}

@Misc{LaTeXSymbols,
  title            = {LaTeX符号},
  abstract         = {- [LaTeX公式例]: https://en.wikibooks.org/wiki/LaTeX/Mathematics
- [Latex数学符号] - Kocbach: http://web.ift.uib.no/Teori/KURS/WRK/TeX/symALL.html
- LateX数学符号 - OeisWiki: https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols


- Greek letters in HTML, XML, TeX, and Unicode: https://www.johndcook.com/blog/greek_letters/},
  file             = {:Latex/LaTeX-Math-Symbols.pdf:PDF},
  groups           = {Latex},
  modificationdate = {2024-08-25T10:27:29},
}

@Book{2013,
  author           = {John Whitington},
  publisher        = {Coherent},
  title            = {OCaml from the Very Beginning},
  year             = {2013},
  isbn             = {978-0-9576711-0-2},
  abstract         = {First published June 2013
Reprinted with corrections October 2013
Reprinted 2014, 2015, 2016, 2017
Reprinted with corrections July 2022},
  file             = {:OCaml/OCaml from the Very Beginning, 2013.pdf:PDF},
  groups           = {OCaml},
  modificationdate = {2024-08-25T09:44:20},
  url              = {https://ocaml-book.com/},
}

@Manual{OCaml5.2,
  title            = {The OCaml system},
  author           = {Xavier Leroy and Damien Doligezand Alain Frischand Jacques Garrigue and Didier Rémyand KC Sivaramakrishnan and Jérôme Vouillon},
  edition          = {5.2},
  year             = {2024},
  comment          = {1046 pages},
  file             = {:OCaml/ocaml-5.2-refman, 2024.pdf:PDF},
  groups           = {OCaml},
  modificationdate = {2024-08-25T09:44:50},
  subtitle         = {Documentation and user’s manual},
  url              = {https://ocaml.org/manual/5.2/index.html},
}

@Book{Levine2009,
  author           = {John Levine},
  publisher        = {O'Reilly Media},
  title            = {flex \& bison},
  year             = {2009},
  isbn             = {9781449379278},
  comment          = {294 pages},
  creationdate     = {2024-07-07T16:16:33},
  file             = {:Compiler/Flex and Bison, 2009.pdf:PDF},
  groups           = {Compiler},
  modificationdate = {2024-08-25T10:18:17},
  url              = {https://www.oreilly.com/library/view/flex-bison/9780596805418/},
}

@Book{Ierusalimschy2016,
  author           = {Roberto Ierusalimschy},
  title            = {Programming in Lua},
  year             = {2016},
  isbn             = {8590379868},
  comment          = {310 pages

version: 5.3 P.4},
  creationdate     = {2024-07-13T10:44:38},
  file             = {:Programming in Lua, 4th Edition, 2016.pdf:PDF},
  groups           = {Lua},
  modificationdate = {2024-07-13T10:47:57},
  url              = {https://www.lua.org/pil/},
}

@Book{Cousineau1998,
  author           = {Guy Cousineau and Michel Mauny},
  publisher        = {Cambridge University Press},
  title            = {The Functional Approach to Programming},
  year             = {1998},
  isbn             = {9781139173018},
  abstract         = {A programming course should concentrate as much as possible on a program's logical structure and design rather than simply show how to write code. The Functional Approach to Programming achieves this aim because logical concepts are evident and programs are transparent so can be written quickly and cleanly. In this book the authors emphasise the notions of function and function application which relate programming to familiar concepts from mathematics and logic. They introduce functional programming via examples but also explain what programs compute and how to reason about them. They show how the ideas can be implemented in the Caml language, a dialect of the ML family, and give examples of how complex programs from a variety of areas (such as arithmetic, tree algorithms, graph algorithms, text parsing and geometry) can be developed in close agreement with their specifications. Many exercises and examples are included throughout the book; solutions are also available.},
  comment          = {Caml language

447 pages},
  doi              = {https://doi.org/10.1017/CBO9781139173018},
  file             = {:OCaml/The Functional Approach to Programming, 1998.pdf:PDF},
  groups           = {OCaml},
  modificationdate = {2024-08-25T09:44:44},
  url              = {https://www.cambridge.org/core/books/functional-approach-to-programming/27F7047FBF0962D02161E79B90BD7FD2},
}

@Book{Clarkson2024,
  author           = {Michael R. Clarkson},
  title            = {OCaml Programming},
  year             = {2024},
  abstract         = {This book is the textbook for CS 3110 Data Structures and Functional Programming at Cornell University. A
past title of this book was “Functional Programming in OCaml”.},
  comment          = {523 pages},
  file             = {:OCaml/OCaml Programming- Correct, Efficient, Beautiful, 2024.pdf:PDF},
  groups           = {OCaml},
  modificationdate = {2024-08-25T09:44:35},
  ranking          = {rank5},
  subtitle         = {Correct +Efficient + Beautiful},
  url              = {https://cs3110.github.io/textbook/cover.html},
}

@Book{Wang2023,
  author           = {Liang Wang and Jianxin Zhao},
  publisher        = {Apress},
  title            = {Architecture of Advanced Numerical Analysis Systems},
  year             = {2023},
  isbn             = {978-1-4842-8852-8},
  comment          = {472 pages},
  doi              = {https://doi.org/10.1007/978-1-4842-8853-5},
  file             = {:OCaml/Architecture of Advanced Numerical Analysis Systems, 2023.pdf:PDF},
  groups           = {OCaml},
  modificationdate = {2024-08-25T09:43:59},
  subtitle         = {Designing a Scientific ComputingSystem using OCaml},
  url              = {https://ocaml.xyz/},
}

@Book{Hickey2008,
  author           = {Jason Hickey},
  title            = {Introduction to Objective Caml},
  year             = {2008},
  comment          = {284 pages},
  file             = {:OCaml/Introduction to Objective Caml, 2008.pdf:PDF},
  groups           = {OCaml},
  modificationdate = {2024-08-25T09:44:13},
}

@Book{Chailloux2000,
  author           = {Emmanuel Chailloux and Pascal Manoury and Bruno Pagano},
  title            = {Developing Applications With Objective Caml},
  year             = {2000},
  comment          = {757 pages},
  file             = {:OCaml/Developing Applications With Objective Caml, 2000.pdf:PDF},
  groups           = {OCaml},
  modificationdate = {2024-08-25T09:44:06},
  url              = {https://caml.inria.fr/pub/docs/oreilly-book/},
}

@Book{Liang1999,
  author           = {Sheng Liang},
  publisher        = {Addison-Wesley Longman Publishing Co., Inc.},
  title            = {Java Native Interface: Programmer's Guide and Reference},
  year             = {1999},
  address          = {USA},
  edition          = {1st},
  isbn             = {0201325772},
  abstract         = {From the Book: PREFACE: This book covers the Java(TM) Native Interface (JNI). It will be useful to you if you are interested in any of the following: integrating a Java application with legacy code written in languages such as C or C++ incorporating a Java virtual machine implementation into an existing application written in languages such as C or C++ implementing a Java virtual machine understanding the technical issues in language interoperability, in particular how to handle features such as garbage collection and multithreading First and foremost, the book is written for developers. You will find easy steps to get started with the JNI, informative discussions on various JNI features, and helpful tips on how to use the JNI effectively. The JNI was initially released in early 1997. The book summarizes two years of collective experience gained by engineers at Sun Microsystems as well as the vast number of developers in the Java technology community. Second, the book presents the design rationale of various JNI features. Not only is this of interest to the academic community, but a thorough understanding of the design is also a prerequisite to using the JNI effectively. Third, a part of the book is the definitive JNI specification for the Java 2 platform. JNI programmers may use the specification as a reference manual. Java virtual machine implementors must follow the specification to achieve conformance. Send comments on this specification or questions about JNI to our electronic mail address: jni@java.sun.com. For the latest on the Java 2 platform, or to get the latest Java 2 SDK release, visit ourwebsite at ...},
  file             = {:JVM/Java Native Interface- Programmer's Guide and Reference, 1999.pdf:PDF},
  groups           = {JVM},
  modificationdate = {2024-08-25T09:42:22},
  url              = {https://dl.acm.org/doi/10.5555/520155},
}

@Misc{JVMTI2004,
  title            = {Creating a Debugging and Profiling Agent with JVMTI},
  year             = {2004},
  comment          = {https://docs.oracle.com/javase/8/docs/technotes/guides/jvmti/},
  groups           = {JVM},
  journal          = {Oracle.com},
  modificationdate = {2024-08-25T09:39:54},
  url              = {https://www.oracle.com/technical-resources/articles/javase/jvmti.html},
}

@Book{Oaks2020,
  author           = {Scott Oaks},
  publisher        = {O'Reilly Media},
  title            = {Java Performance},
  year             = {2020},
  edition          = {2},
  isbn             = {9781492056119},
  abstract         = {Coding and testing are generally considered separate areas of expertise. In this practical book, Java expert Scott Oaks takes the approach that anyone who works with Java should be adept at understanding how code behaves in the Java Virtual Machine—including the tunings likely to help performance. This updated second edition helps you gain in-depth knowledge of Java application performance using both the JVM and the Java platform.

Developers and performance engineers alike will learn a variety of features, tools, and processes for improving the way the Java 8 and 11 LTS releases perform. While the emphasis is on production-supported releases and features, this book also features previews of exciting new technologies such as ahead-of-time compilation and experimental garbage collections.

- Understand how various Java platforms and compilers affect performance
- Learn how Java garbage collection works
- Apply four principles to obtain best results from performance testing
- Use the JDK and other tools to learn how a Java application is performing
- Minimize the garbage collector’s impact through tuning and programming practices
- Tackle performance issues in Java APIs- 
- Improve Java-driven database application performance},
  creationdate     = {2024-08-03T22:32:11},
  file             = {:Java/Java Performance, 2nd Edition, 2020.epub:ePUB},
  groups           = {Java},
  modificationdate = {2024-08-25T08:57:31},
  ranking          = {rank5},
  url              = {https://www.oreilly.com/library/view/java-performance-2nd/9781492056102/},
}

@Book{Forta2018,
  author           = {Ben Forta},
  publisher        = {Addison-Wesley Professional},
  title            = {Learning Regular Expressions},
  year             = {2018},
  isbn             = {9780134757056},
  comment          = {144 pages},
  creationdate     = {2024-08-10T12:36:53},
  file             = {:Compiler/Learning Regular Expressions, 2018.epub:ePUB},
  groups           = {Compiler},
  modificationdate = {2024-08-25T10:18:33},
  url              = {https://forta.com/books/0134757068/},
}

@Book{Lubanovic2019,
  author           = {Bill Lubanovic},
  publisher        = {O'Reilly Media},
  title            = {Introducing Python},
  year             = {2019},
  edition          = {2},
  isbn             = {9781492051367},
  comment          = {627 pages},
  creationdate     = {2024-08-11T16:11:10},
  file             = {:Python/Introducing Python, 2nd Edition, 2019.pdf:PDF},
  groups           = {Python},
  modificationdate = {2024-08-25T09:17:48},
  ranking          = {rank5},
  subtitle         = {Modern Computing in Simple Packages},
  url              = {https://www.oreilly.com/library/view/introducing-python-2nd/9781492051374/},
}

@Manual{ASDF,
  title            = {ASDF: Another System DefinitionFacility},
  creationdate     = {2024-08-25T08:10:10},
  file             = {:Lisp/ASDF - Another System Definition Facility[3.3.3.3].pdf:PDF},
  groups           = {Common Lisp},
  modificationdate = {2024-08-25T08:37:21},
}

@Manual{ASDFUIOP,
  title            = {ASDF UIOP Manual},
  creationdate     = {2024-08-25T08:11:42},
  file             = {:Lisp/ASDF UIOP Manual 3.3.3.3.pdf:PDF},
  groups           = {Common Lisp},
  modificationdate = {2024-08-25T08:37:34},
}

@Manual{SLIME,
  title            = {SLIME User Manual},
  year             = {2020},
  comment          = {CN: https://github.com/unionx/slime-user-manual-cn},
  creationdate     = {2024-08-25T08:14:12},
  file             = {:Lisp/SLIME User Manual[2.24].pdf:PDF},
  groups           = {Common Lisp},
  modificationdate = {2024-08-25T08:40:16},
  url              = {https://slime.common-lisp.dev/doc/slime.pdf},
}

@Manual{CLHS,
  title            = {The Common Lisp HyperSpec(CLHS)},
  year             = {2005},
  creationdate     = {2024-08-25T08:17:42},
  file             = {:Lisp/HyperSpec-7-0/HyperSpec/Body/00_.htm:htm},
  groups           = {Common Lisp},
  modificationdate = {2024-08-25T08:41:37},
  url              = {https://www.lispworks.com/documentation/common-lisp.html},
}

@Book{Mitchell2018,
  author           = {Ryan Mitchell},
  publisher        = {O'Reilly Media},
  title            = {Web Scraping with Python},
  year             = {2018},
  edition          = {2},
  isbn             = {9781491985571},
  creationdate     = {2024-08-25T09:51:43},
  file             = {:Python/Web Scraping with Python, 2nd Edition, 2018.pdf:PDF},
  groups           = {Python},
  modificationdate = {2024-08-25T09:53:18},
  url              = {https://www.oreilly.com/library/view/web-scraping-with/9781491985564/},
}

@Article{article,
  author           = {Dice, David and Moir, Mark and Scherer, William},
  title            = {Quickly Reacquirable Locks},
  year             = {2010},
  month            = {01},
  file             = {:JVM/Quickly Reacquirable Locks.pdf:PDF},
  groups           = {JVM},
  modificationdate = {2024-08-25T10:49:31},
}

@Book{Cameron2004,
  author           = {Debra Cameron and James Elliott and Marc Loy and Eric S. Raymond and Bill Rosenblatt},
  publisher        = {O'Reilly Media},
  title            = {Learning GNU Emacs},
  year             = {2004},
  edition          = {3},
  isbn             = {9780596552374},
  abstract         = {GNU Emacs is the most popular and widespread of the Emacs family of editors. It is also the most powerful and flexible. Unlike all other text editors, GNU Emacs is a complete working environment--you can stay within Emacs all day without leaving. Learning GNU Emacs, 3rd Edition tells readers how to get started with the GNU Emacs editor. It is a thorough guide that will also "grow" with you: as you become more proficient, this book will help you learn how to use Emacs more effectively. It takes you from basic Emacs usage (simple text editing) to moderately complicated customization and programming.The third edition of Learning GNU Emacs describes Emacs 21.3 from the ground up, including new user interface features such as an icon-based toolbar and an interactive interface to Emacs customization. A new chapter details how to install and run Emacs on Mac OS X, Windows, and Linux, including tips for using Emacs effectively on those platforms.Learning GNU Emacs, third edition, covers:

How to edit files with Emacs
Using the operating system shell through Emacs
How to use multiple buffers, windows, and frames
Customizing Emacs interactively and through startup files
Writing macros to circumvent repetitious tasks
Emacs as a programming environment for Java, C++, and Perl, among others
Using Emacs as an integrated development environment (IDE)
Integrating Emacs with CVS, Subversion and other change control systems for projects with multiple developers
Writing HTML, XHTML, and XML with Emacs
The basics of Emacs Lisp
The book is aimed at new Emacs users, whether or not they are programmers. Also useful for readers switching from other Emacs implementations to GNU Emacs.},
  comment          = {Emacs 21.3},
  creationdate     = {2024-09-07T20:18:39},
  file             = {:Lisp/Emacs/Learning GNU Emacs, 3rd Edition, 2005.pdf:PDF},
  groups           = {Lisp},
  modificationdate = {2024-09-07T20:36:20},
  url              = {https://www.oreilly.com/library/view/learning-gnu-emacs/0596006489/},
}

@Manual{GNUEmacs,
  title            = {GNU Emacs Manual},
  organization     = {Free Software Foundation},
  year             = {2024},
  creationdate     = {2024-09-07T20:25:02},
  file             = {:Lisp/Emacs/GNU Emacs Manual.v29.pdf:PDF},
  groups           = {Lisp},
  modificationdate = {2024-09-07T20:36:10},
  url              = {https://www.gnu.org/software/emacs/manual/emacs.html},
}

@Manual{GNUEmacsLisp,
  title            = {GNU Emacs Lisp Reference Manual},
  creationdate     = {2024-09-07T20:30:08},
  file             = {:Lisp/Emacs/GNU Emacs Lisp Reference Manual.v29.pdf:PDF},
  groups           = {Lisp},
  modificationdate = {2024-09-07T20:35:59},
  url              = {https://www.gnu.org/software/emacs/manual/elisp.html},
}

@Manual{GNUEmacsReferenceCards,
  title            = {GNU Emacs Reference Cards},
  year             = {2024},
  comment          = {- Emacs
- Emacs survival card
- Calc
- Dired
- Gnus
- Gnus booklet
- Org
- VIP
- Viper},
  creationdate     = {2024-09-07T20:31:45},
  file             = {:Lisp/Emacs/GNU Emacs Reference Card.v29.pdf:PDF;:Lisp/Emacs/GNU Emacs Survival Card.v29.pdf:PDF;:Lisp/Emacs/Dired Reference Card.v29.pdf:PDF;:Lisp/Emacs/Org-Mode Reference Card.v9.6.15.pdf:PDF},
  groups           = {Lisp},
  modificationdate = {2024-09-07T21:03:11},
  url              = {https://www.gnu.org/software/emacs/refcards/index.html},
}

@Conference{Norvig1993,
  author           = {Peter Norvig and Kent Pitman},
  booktitle        = {Lisp Users and Vendors Conference},
  title            = {Tutorial on Good Lisp Programming Style},
  year             = {1993},
  creationdate     = {2024-09-22T02:05:52},
  file             = {:Lisp/Tutorial on Good Lisp Programming Style, 1993.pdf:PDF},
  groups           = {Lisp},
  modificationdate = {2024-09-22T02:12:19},
  ranking          = {rank5},
  url              = {https://www.cs.umd.edu/~nau/cmsc421/norvig-lisp-style.pdf},
}

@Book{Hoyte2008,
  author   = {Doug Hoyte},
  title    = {Let Over Lambda},
  year     = {2008},
  isbn     = {978-1-4357-1275-1},
  abstract = {Let Over Lambda (ISBN 978-1-4357-1275-1, 376+iv pp.) is one of the most hardcore computer programming books out there. Starting with the fundamentals, it describes the most advanced features of the most advanced language: COMMON LISP. The point of this book is to expose you to ideas that you might otherwise never be exposed to.

This book is about macros, that is programs that write programs. Macros are what make lisp the greatest programming language in the world. When used properly, macros enable amazing feats of abstraction, programmer productivity, and code efficiency and security that are unheard of elsewhere. Macros let you do things you simply cannot do in other languages.

If you are looking for a dry coding manual that re-hashes common-sense techniques in whatever langue du jour, this book is not for you. This book is about pushing the boundaries of what we know about programming. While this book teaches useful macro skills that can help solve your programming problems today and now, it has also been designed to be entertaining and inspiring. If you have ever wondered what lisp or even programming itself is really about, this is the book you have been looking for.},
  comment  = {376 pages

前6章 online

中文版: https://oneforalone.github.io/lol-zh/index.html},
  groups   = {Common Lisp},
  url      = {https://letoverlambda.com/},
}

@Book{Drysdale2024,
  author           = {David Drysdale},
  publisher        = {O'Reilly Media},
  title            = {Effective Rust},
  year             = {2024},
  isbn             = {9781098151409},
  abstract         = {Rust's popularity is growing, due in part to features like memory safety, type safety, and thread safety. But these same elements can also make learning Rust a challenge, even for experienced programmers. This practical guide helps you make the transition to writing idiomatic Rust—while also making full use of Rust's type system, safety guarantees, and burgeoning ecosystem.

If you're a software engineer who has experience with an existing compiled language, or if you've struggled to convert a basic understanding of Rust syntax into working programs, this book is for you. By focusing on the conceptual differences between Rust and other compiled languages, and by providing specific recommendations that programmers can easily follow, Effective Rust will soon have you writing fluent Rust, not just badly translated C++.

- Understand the structure of Rust's type system
- Learn Rust idioms for error handling, iteration, and more
- Discover how to work with Rust's crate ecosystem
- Use Rust's type system to express your design
- Win fights with the borrow checker
- Build a robust project that takes full advantage of the Rust tooling ecosystem},
  comment          = {298 pages},
  creationdate     = {2024-10-09T07:05:53},
  file             = {:Rust/Effective Rust, 2024.pdf:PDF},
  groups           = {Rust},
  modificationdate = {2024-10-09T07:14:54},
  url              = {https://www.lurklurk.org/effective-rust/},
}

@Book{McNamara2021,
  author           = {Tim McNamara},
  publisher        = {Manning},
  title            = {Rust in Action},
  year             = {2021},
  isbn             = {9781617294556},
  abstract         = {Rust in Action introduces the Rust programming language by exploring numerous systems programming concepts and techniques. You'll be learning Rust by delving into how computers work under the hood. You'll find yourself playing with persistent storage, memory, networking and even tinkering with CPU instructions. The book takes you through using Rust to extend other applications and teaches you tricks to write blindingly fast code. You'll also discover parallel and concurrent programming. Filled to the brim with real-life use cases and scenarios, you'll go beyond the Rust syntax and see what Rust has to offer in real-world use cases.},
  comment          = {456 pages},
  creationdate     = {2024-10-09T07:09:41},
  file             = {:Rust/Rust in Action, 2021.pdf:PDF},
  groups           = {Rust},
  modificationdate = {2024-10-09T07:13:43},
  url              = {https://www.manning.com/books/rust-in-action},
}

@Book{Robbins2021,
  author           = {Arnold Robbins and Elbert Hannah},
  publisher        = {O'Reilly Media},
  title            = {Learning the vi and Vim Editors},
  year             = {2021},
  edition          = {8},
  isbn             = {9781492078807},
  abstract         = {Among the text editors being used in the programming community, perhaps the most important family is vi and its derivatives. With this updated edition, Unix and Linux users will learn text editing basics for both vi and Vim ("vi improved") before moving on to advanced editing tools for each editor. Authors Arnold Robbins and Elbert Hannah cover the latest major releases of Vim, including 8.0 and 8.2.

If you're a programmer or computer analyst, or you work with browsers or command-line interfaces, using Vim can speed up your work and make complex tasks easier. You'll examine multiwindow editing, global search and replacement, and power tools for programmers, and learn how to write interactive macros and scripts to extend the editor--all in the easy-to-follow style that's made this book a classic.

- Go beyond the basics to learn which vi commands fit your specific needs
- Learn advanced vi tools that shift most of the editing burden to the computer
- Explore Vim tools that provide major improvements over vi
- Examine Vimâ??s multiwindow editing feature, a significant upgrade over vi
- Use Vim scripts to customize and tailor Vim to your needs
- Look at Vim in modern GUI environments with Graphical Vim (gvim)
- See Vim in the broader programming milieu, including usingit as an IDE},
  comment          = {545 pages},
  creationdate     = {2024-10-13T22:24:20},
  file             = {:Learning the vi and Vim Editors, 2021.pdf:PDF},
  groups           = {Tools},
  modificationdate = {2024-10-13T22:26:39},
}

@Book{Preschern2022,
  author    = {Christopher Preschern},
  publisher = {O'Reilly Media},
  title     = {Fluent C},
  year      = {2022},
  isbn      = {9781492097334},
  comment   = {304 pages},
  file      = {:C/Fluent C, 2022.mobi:mobi},
  groups    = {C},
  subtitle  = {Principles, Practices, and Patterns},
  url       = {https://www.oreilly.com/library/view/fluent-c/9781492097273},
}

@Book{Gustedt2019,
  author    = {Jens Gustedt},
  publisher = {Manning},
  title     = {Modern C},
  year      = {2019},
  isbn      = {9781617295812},
  abstract  = {Modern C introduces you to modern day C programming, emphasizing the unique and new features of this powerful language. For new C coders, it starts with fundamentals like structure, grammar, compilation, and execution. From there, you’ll advance to control structures, data types, operators, and functions, as you gain a deeper understanding of what’s happening under the hood. In the final chapters, you’ll explore performance considerations, reentrancy, atomicity, threads, and type-generic programming. You’ll code as you go with concept-reinforcing exercises and skill-honing challenges along the way.},
  comment   = {408 pages},
  file      = {:C/Modern C, 2019.pdf:PDF},
  groups    = {C},
  url       = {https://www.manning.com/books/modern-c},
}

@Standard{C17,
  title  = {C17},
  url    = {https://www.open-std.org/jtc1/sc22/wg14/www/docs/n2310.pdf},
  file   = {:C/C17(n2310).pdf:PDF},
  groups = {C},
}

@Book{Seacord2020,
  author    = {Robert C. Seacord},
  publisher = {No Starch Press},
  title     = {Effective C},
  year      = {2020},
  isbn      = {9781718501041},
  comment   = {272 pages},
  file      = {:C/Effective C, 2020.pdf:PDF},
  groups    = {C},
  subtitle  = {An Introduction to Professional C Programming},
  url       = {https://nostarch.com/Effective_C},
}

@Book{Oualline1997,
  author    = {Steve Oualline},
  publisher = {O'Reilly Media},
  title     = {Practical C Programming},
  year      = {1997},
  edition   = {3},
  isbn      = {9781565923065},
  comment   = {454 pages},
  file      = {:C/Practical C Programming, 1997.pdf:PDF},
  groups    = {C},
  url       = {https://www.oreilly.com/library/view/practical-c-programming/1565923065/},
}

@Standard{X3J13/94-101R,
  title            = {The ANSI Common Lisp Standard Draft},
  year             = {1994},
  creationdate     = {2024-11-24T09:01:42},
  file             = {:Lisp/ANSI Common Lisp standard draft, 1994.pdf:PDF},
  groups           = {Common Lisp},
  modificationdate = {2024-11-24T09:05:13},
}

@Book{Lamport1994,
  author    = {Leslie Lamport},
  publisher = {Addison Wesley},
  title     = {LaTeX: A document preparation system, User’s guide and reference manual},
  year      = {1994},
  edition   = {2},
  isbn      = {978-0201529838},
  comment   = {288 pages},
  file      = {:Latex/LaTex - A Document Preparation System, 1994.pdf:PDF;:Latex/LaTex - A Document Preparation System, 1994[Errata].pdf:PDF},
  groups    = {Latex},
  url       = {https://www.latex-project.org/help/books/},
}

