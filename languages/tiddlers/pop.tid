created: 20241202074656621
creator: jargonzhou
modified: 20241202074717115
modifier: jargonzhou
tags: [[CLHS Symbols]]
title: pop


> \[!tip] "Macro"
> ''Syntax'':

```lisp
pop place => element
```

''Arguments and Values'':

* `place`: 一个位置, 它的值是一个列表(可以是点列表、循环列表)
* `element`: 一个对象(`place`的内容的car)

''Description'':

`pop`读取`place`的值, 记住检索的列表的car, 将列表的cdr写入`place`, 最终返回原始检索的列表car.

有关`place`的子形式的求值, 见[[5.1.1.1 子形式到位置的求值|../05-Data-and-Control-Flow#5.1.1.1]].

''Examples'':

```lisp
(setq stack '(a b c)) =>  (A B C)
(pop stack) =>  A
stack =>  (B C)

(setq llst '((1 2 3 4))) =>  ((1 2 3 4))
(pop (car llst)) =>  1
llst =>  ((2 3 4))
```

''Side Effects'': `place`的内容被修改.

''Affected By'': 无.

''Exceptional Situations'': 无.

''See Also'':

[[push|#push]], [[pushnew|#pushnew]], [[5.1 通用的引用|../05-Data-and-Control-Flow#5.1]]

''Notes'':

`(pop place)`的作用基本上等价于:

```lisp
(prog1 (car place) (setf place (cdr place)))
```

除了后者会求值`place`的子形式三次, 而`pop`只求值一次.